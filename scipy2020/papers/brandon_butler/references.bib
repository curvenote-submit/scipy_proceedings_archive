@article{abraham.etal2015,
  title = {{{GROMACS}}: {{High}} Performance Molecular Simulations through Multi-Level Parallelism from Laptops to Supercomputers},
  shorttitle = {{{GROMACS}}},
  author = {Abraham, Mark James and Murtola, Teemu and Schulz, Roland and Páll, Szilárd and Smith, Jeremy C. and Hess, Berk and Lindahl, Erik},
  date = {2015-09-01},
  journaltitle = {SoftwareX},
  volume = {1-2},
  pages = {19--25},
  issn = {2352-7110},
  doi = {10.1016/j.softx.2015.06.001},
  url = {http://www.sciencedirect.com/science/article/pii/S2352711015000059},
  urldate = {2020-05-09},
  abstract = {GROMACS is one of the most widely used open-source and free software codes in chemistry, used primarily for dynamical simulations of biomolecules. It provides a rich set of calculation types, preparation and analysis tools. Several advanced techniques for free-energy calculations are supported. In version 5, it reaches new performance heights, through several new and enhanced parallelization algorithms. These work on every level; SIMD registers inside cores, multithreading, heterogeneous CPU–GPU acceleration, state-of-the-art 3D domain decomposition, and ensemble-level parallelization through built-in replica exchange and the separate Copernicus framework. The latest best-in-class compressed trajectory storage format is supported.},
  file = {/home/brandon/Zotero/storage/PS9KPZRZ/Abraham et al. - 2015 - GROMACS High performance molecular simulations th.pdf;/home/brandon/Zotero/storage/LD5KJQ8Z/S2352711015000059.html},
  keywords = {Free energy,GPU,Molecular dynamics,SIMD},
  langid = {english}
}

@article{alder.wainwright1959,
  title = {Studies in {{Molecular Dynamics}}. {{I}}. {{General Method}}},
  author = {Alder, B. J. and Wainwright, T. E.},
  date = {1959-08-01},
  journaltitle = {J. Chem. Phys.},
  volume = {31},
  pages = {459--466},
  publisher = {{American Institute of Physics}},
  issn = {0021-9606},
  doi = {10.1063/1.1730376},
  url = {https://aip.scitation.org/doi/abs/10.1063/1.1730376},
  urldate = {2020-05-09},
  file = {/home/brandon/Zotero/storage/L9IK7AE2/Alder and Wainwright - 1959 - Studies in Molecular Dynamics. I. General Method.pdf;/home/brandon/Zotero/storage/P6GHUCDA/1.html},
  number = {2}
}

@article{anderson.etal2008,
  title = {General Purpose Molecular Dynamics Simulations Fully Implemented on Graphics Processing Units},
  author = {Anderson, Joshua A. and Lorenz, Chris D. and Travesset, A.},
  date = {2008-05-01},
  journaltitle = {Journal of Computational Physics},
  volume = {227},
  pages = {5342--5359},
  issn = {0021-9991},
  doi = {10.1016/j.jcp.2008.01.047},
  url = {http://www.sciencedirect.com/science/article/pii/S0021999108000818},
  urldate = {2020-05-09},
  abstract = {Graphics processing units (GPUs), originally developed for rendering real-time effects in computer games, now provide unprecedented computational power for scientific applications. In this paper, we develop a general purpose molecular dynamics code that runs entirely on a single GPU. It is shown that our GPU implementation provides a performance equivalent to that of fast 30 processor core distributed memory cluster. Our results show that GPUs already provide an inexpensive alternative to such clusters and discuss implications for the future.},
  file = {/home/brandon/Zotero/storage/RE5A2Y2C/S0021999108000818.html},
  keywords = {CUDA,GPU,Graphics processing unit,Molecular dynamics,NVIDIA,Polymer systems},
  langid = {english},
  number = {10}
}

@article{anderson.etal2017,
  title = {Shape and {{Symmetry Determine Two}}-{{Dimensional Melting Transitions}} of {{Hard Regular Polygons}}},
  author = {Anderson, Joshua A. and Antonaglia, James and Millan, Jaime A. and Engel, Michael and Glotzer, Sharon C.},
  date = {2017-04-05},
  journaltitle = {Phys. Rev. X},
  volume = {7},
  pages = {021001},
  publisher = {{American Physical Society}},
  doi = {10.1103/PhysRevX.7.021001},
  url = {https://link.aps.org/doi/10.1103/PhysRevX.7.021001},
  urldate = {2020-05-09},
  abstract = {The melting transition of two-dimensional systems is a fundamental problem in condensed matter and statistical physics that has advanced significantly through the application of computational resources and algorithms. Two-dimensional systems present the opportunity for novel phases and phase transition scenarios not observed in 3D systems, but these phases depend sensitively on the system and, thus, predicting how any given 2D system will behave remains a challenge. Here, we report a comprehensive simulation study of the phase behavior near the melting transition of all hard regular polygons with 3≤n≤14 vertices using massively parallel Monte Carlo simulations of up to 1×106 particles. By investigating this family of shapes, we show that the melting transition depends upon both particle shape and symmetry considerations, which together can predict which of three different melting scenarios will occur for a given n. We show that systems of polygons with as few as seven edges behave like hard disks; they melt continuously from a solid to a hexatic fluid and then undergo a first-order transition from the hexatic phase to the isotropic fluid phase. We show that this behavior, which holds for all 7≤n≤14, arises from weak entropic forces among the particles. Strong directional entropic forces align polygons with fewer than seven edges and impose local order in the fluid. These forces can enhance or suppress the discontinuous character of the transition depending on whether the local order in the fluid is compatible with the local order in the solid. As a result, systems of triangles, squares, and hexagons exhibit a Kosterlitz-Thouless-Halperin-Nelson-Young (KTHNY) predicted continuous transition between isotropic fluid and triatic, tetratic, and hexatic phases, respectively, and a continuous transition from the appropriate x-atic to the solid. In particular, we find that systems of hexagons display continuous two-step KTHNY melting. In contrast, due to symmetry incompatibility between the ordered fluid and solid, systems of pentagons and plane-filling fourfold pentilles display a one-step first-order melting of the solid to the isotropic fluid with no intermediate phase.},
  file = {/home/brandon/Zotero/storage/DLSD725F/Anderson et al. - 2017 - Shape and Symmetry Determine Two-Dimensional Melti.pdf;/home/brandon/Zotero/storage/RYK9NX6H/PhysRevX.7.html},
  number = {2}
}

@article{anderson.etal2020,
  ids = {anderson.etal2019},
  title = {{{HOOMD}}-Blue: {{A Python}} Package for High-Performance Molecular Dynamics and Hard Particle {{Monte Carlo}} Simulations},
  shorttitle = {{{HOOMD}}-Blue},
  author = {Anderson, Joshua A. and Glaser, Jens and Glotzer, Sharon C.},
  date = {2020-02-15},
  journaltitle = {Computational Materials Science},
  volume = {173},
  pages = {109363},
  issn = {0927-0256},
  doi = {10.1016/j.commatsci.2019.109363},
  url = {http://www.sciencedirect.com/science/article/pii/S0927025619306627},
  urldate = {2020-05-09},
  abstract = {HOOMD-blue is a particle simulation engine designed for nano- and colloidal-scale molecular dynamics and hard particle Monte Carlo simulations. It has been actively developed since March 2007 and available open source since August 2008. HOOMD-blue is a Python package with a high performance C++/CUDA backend that we built from the ground up for GPU acceleration. The Python interface allows users to combine HOOMD-blue with other packages in the Python ecosystem to create simulation and analysis workflows. We employ software engineering practices to develop, test, maintain, and expand the code.},
  file = {/home/brandon/Zotero/storage/DYVKGTJZ/Anderson et al. - 2020 - HOOMD-blue A Python package for high-performance .pdf;/home/brandon/Zotero/storage/5JJ9N75I/S0927025619306627.html},
  keywords = {computational,CUDA,GPU,methods,Molecular dynamics,Molecular simulation,Monte Carlo,Python},
  langid = {english}
}

@article{berendsen.etal1995,
  title = {{{GROMACS}}: {{A}} Message-Passing Parallel Molecular Dynamics Implementation},
  shorttitle = {{{GROMACS}}},
  author = {Berendsen, H. J. C. and van der Spoel, D. and van Drunen, R.},
  date = {1995-09-02},
  journaltitle = {Computer Physics Communications},
  volume = {91},
  pages = {43--56},
  issn = {0010-4655},
  doi = {10.1016/0010-4655(95)00042-E},
  url = {http://www.sciencedirect.com/science/article/pii/001046559500042E},
  urldate = {2020-05-09},
  abstract = {A parallel message-passing implementation of a molecular dynamics (MD) program that is useful for bio(macro)molecules in aqueous environment is described. The software has been developed for a custom-designed 32-processor ring GROMACS (GROningen MAchine for Chemical Simulation) with communication to and from left and right neighbours, but can run on any parallel system onto which a a ring of processors can be mapped and which supports PVM-like block send and receive calls. The GROMACS software consists of a preprocessor, a parallel MD and energy minimization program that can use an arbitrary number of processors (including one), an optional monitor, and several analysis tools. The programs are written in ANSI C and available by ftp (information: gromacs@chem.rug.nl). The functionality is based on the GROMOS (GROningen MOlecular Simulation) package (van Gunsteren and Berendsen, 1987; BIOMOS B.V., Nijenborgh 4, 9747 AG Groningen). Conversion programs between GROMOS and GROMACS formats are included. The MD program can handle rectangular periodic boundary conditions with temperature and pressure scaling. The interactions that can be handled without modification are variable non-bonded pair interactions with Coulomb and Lennard-Jones or Buckingham potentials, using a twin-range cut-off based on charge groups, and fixed bonded interactions of either harmonic or constraint type for bonds and bond angles and either periodic or cosine power series interactions for dihedral angles. Special forces can be added to groups of particles (for non-equilibrium dynamics or for position restraining) or between particles (for distance restraints). The parallelism is based on particle decomposition. Interprocessor communication is largely limited to position and force distribution over the ring once per time step.},
  file = {/home/brandon/Zotero/storage/UML9XSM8/001046559500042E.html},
  keywords = {Molecular dynamics,Parallel computing},
  langid = {english},
  number = {1},
  options = {useprefix=true}
}

@inproceedings{byna.etal2012,
  title = {Parallel {{I}}/{{O}}, Analysis, and Visualization of a Trillion Particle Simulation},
  booktitle = {{{SC}} '12: {{Proceedings}} of the {{International Conference}} on {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
  author = {Byna, Surendra and Chou, Jerry and Rubel, Oliver and Prabhat and Karimabadi, Homa and Daughter, William S. and Roytershteyn, Vadim and Bethel, E. Wes and Howison, Mark and Hsu, Ke-Jou and Lin, Kuan-Wu and Shoshani, Arie and Uselton, Andrew and Wu, Kesheng},
  date = {2012-11},
  pages = {1--12},
  issn = {2167-4337},
  doi = {10.1109/SC.2012.92},
  abstract = {Petascale plasma physics simulations have recently entered the regime of simulating trillions of particles. These unprecedented simulations generate massive amounts of data, posing significant challenges in storage, analysis, and visualization. In this paper, we present parallel I/O, analysis, and visualization results from a VPIC trillion particle simulation running on 120,000 cores, which produces 30TB of data for a single timestep. We demonstrate the successful application of H5Part, a particle data extension of parallel HDF5, for writing the dataset at a significant fraction of system peak I/O rates. To enable efficient analysis, we develop hybrid parallel FastQuery to index and query data using multi-core CPUs on distributed memory hardware. We show good scalability results for the FastQuery implementation using up to 10,000 cores. Finally, we apply this indexing/query-driven approach to facilitate the first-ever analysis and visualization of the trillion particle dataset.},
  eventtitle = {{{SC}} '12: {{Proceedings}} of the {{International Conference}} on {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
  file = {/home/brandon/Zotero/storage/B8ZSRDIQ/Byna et al. - 2012 - Parallel IO, analysis, and visualization of a tri.pdf;/home/brandon/Zotero/storage/TRURD9Z6/6468542.html},
  keywords = {Computational modeling,data analysis,data index,data query,data storage,data visualisation,data visualization,Data visualization,H5Part particle data extension,hybrid parallel FastQuery,Indexing,input-output rates,Instruction sets,multicore CPU,multiprocessing systems,parallel input-output,parallel processing,petascale plasma physics simulation,physics computing,plasma applications,Plasmas,VPIC trillion particle simulation,Writing}
}

@article{case.etal2005,
  title = {The {{Amber}} Biomolecular Simulation Programs},
  author = {Case, David A. and Cheatham, Thomas E. and Darden, Tom and Gohlke, Holger and Luo, Ray and Merz, Kenneth M. and Onufriev, Alexey and Simmerling, Carlos and Wang, Bing and Woods, Robert J.},
  date = {2005},
  journaltitle = {Journal of Computational Chemistry},
  volume = {26},
  pages = {1668--1688},
  issn = {1096-987X},
  doi = {10.1002/jcc.20290},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.20290},
  urldate = {2020-05-21},
  abstract = {We describe the development, current features, and some directions for future development of the Amber package of computer programs. This package evolved from a program that was constructed in the late 1970s to do Assisted Model Building with Energy Refinement, and now contains a group of programs embodying a number of powerful tools of modern computational chemistry, focused on molecular dynamics and free energy calculations of proteins, nucleic acids, and carbohydrates. © 2005 Wiley Periodicals, Inc. J Comput Chem 26: 1668–1688, 2005},
  file = {/home/brandon/Zotero/storage/3KQR6GVE/Case et al. - 2005 - The Amber biomolecular simulation programs.pdf;/home/brandon/Zotero/storage/QDHBBV8D/jcc.html},
  keywords = {Amber,biomolecular simulation programs},
  langid = {english},
  number = {16}
}

@article{cummings.gilmer2019,
  title = {Open-Source Molecular Modeling Software in Chemical Engineering},
  author = {Cummings, Peter T and Gilmer, Justin B},
  date = {2019-03-01},
  journaltitle = {Current Opinion in Chemical Engineering},
  volume = {23},
  pages = {99--105},
  issn = {2211-3398},
  doi = {10.1016/j.coche.2019.03.008},
  url = {http://www.sciencedirect.com/science/article/pii/S2211339819300073},
  urldate = {2020-05-28},
  abstract = {The molecular modeling community within chemical engineering has been rapidly growing for several decades. This was recognized formally by the American Institute of Chemical Engineers in 2000 with the establishment of a new programming group, the Computational and Molecular Science and Engineering Forum (CoMSeF). Many researchers in this community have embraced the principles of open source software, and have made significant contributions to the portfolio of open-source software available for use by the entire scientific and engineering community. In this article, we briefly review the concepts of molecular modeling and open-source software, and provide an overview of some of these contributions from the chemical engineering community. Additional information is provided in an extensive supplementary information (SI) addendum.},
  file = {/home/brandon/Zotero/storage/YD2XREQ6/S2211339819300073.html},
  langid = {english},
  series = {Frontiers of {{Chemical Engineering}}: {{Molecular Modeling}}}
}

@article{damasceno.etal2012,
  ids = {damasceno.etal2012a},
  title = {Predictive {{Self}}-{{Assembly}} of {{Polyhedra}} into {{Complex Structures}}},
  author = {Damasceno, Pablo F. and Engel, Michael and Glotzer, Sharon C.},
  date = {2012-07-27},
  journaltitle = {Science},
  volume = {337},
  pages = {453--457},
  publisher = {{American Association for the Advancement of Science}},
  issn = {0036-8075, 1095-9203},
  doi = {10.1126/science.1220869},
  url = {https://science.sciencemag.org/content/337/6093/453},
  urldate = {2019-12-08},
  abstract = {Predicting structure from the attributes of a material’s building blocks remains a challenge and central goal for materials science. Isolating the role of building block shape for self-assembly provides insight into the ordering of molecules and the crystallization of colloids, nanoparticles, proteins, and viruses. We investigated 145 convex polyhedra whose assembly arises solely from their anisotropic shape. Our results demonstrate a remarkably high propensity for thermodynamic self-assembly and structural diversity. We show that from simple measures of particle shape and local order in the fluid, the assembly of a given shape into a liquid crystal, plastic crystal, or crystal can be predicted.
Two parameters relating to particle shape and nearest neighbors reveal the preferred packing of complex structures.
Two parameters relating to particle shape and nearest neighbors reveal the preferred packing of complex structures.},
  eprint = {22837525},
  eprinttype = {pmid},
  file = {/home/brandon/Zotero/storage/CXR8T7PV/Damasceno et al. - 2012 - Predictive Self-Assembly of Polyhedra into Complex.pdf;/home/brandon/Zotero/storage/K7VYWJVU/Damasceno et al. - 2012 - Predictive Self-Assembly of Polyhedra into Complex.pdf;/home/brandon/Zotero/storage/FRNM7D5J/453.html;/home/brandon/Zotero/storage/XWC3TFCC/453.html},
  langid = {english},
  number = {6093}
}

@article{dignon.etal2018,
  title = {Relation between Single-Molecule Properties and Phase Behavior of Intrinsically Disordered Proteins},
  author = {Dignon, Gregory L. and Zheng, Wenwei and Best, Robert B. and Kim, Young C. and Mittal, Jeetain},
  date = {2018-10-02},
  journaltitle = {PNAS},
  volume = {115},
  pages = {9929--9934},
  issn = {0027-8424, 1091-6490},
  doi = {10.1073/pnas.1804177115},
  url = {https://www.pnas.org/content/115/40/9929},
  urldate = {2020-01-08},
  abstract = {Proteins that undergo liquid–liquid phase separation (LLPS) have been shown to play a critical role in many physiological functions through formation of condensed liquid-like assemblies that function as membraneless organelles within biological systems. To understand how different proteins may contribute differently to these assemblies and their functions, it is important to understand the molecular driving forces of phase separation and characterize their phase boundaries and material properties. Experimental studies have shown that intrinsically disordered regions of these proteins are a major driving force, as many of them undergo LLPS in isolation. Previous work on polymer solution phase behavior suggests a potential correspondence between intramolecular and intermolecular interactions that can be leveraged to discover relationships between single-molecule properties and phase boundaries. Here, we take advantage of a recently developed coarse-grained framework to calculate the θ temperature TθTθ{$<$}mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"{$><$}mml:msub{$><$}mml:mrow{$><$}mml:mi{$>$}T{$<$}/mml:mi{$><$}/mml:mrow{$><$}mml:mrow{$><$}mml:mi{$>$}θ{$<$}/mml:mi{$><$}/mml:mrow{$><$}/mml:msub{$><$}/mml:math{$>$}, the Boyle temperature TBTB{$<$}mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"{$><$}mml:msub{$><$}mml:mrow{$><$}mml:mi{$>$}T{$<$}/mml:mi{$><$}/mml:mrow{$><$}mml:mrow{$><$}mml:mi{$>$}B{$<$}/mml:mi{$><$}/mml:mrow{$><$}/mml:msub{$><$}/mml:math{$>$}, and the critical temperature TcTc{$<$}mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"{$><$}mml:msub{$><$}mml:mrow{$><$}mml:mi{$>$}T{$<$}/mml:mi{$><$}/mml:mrow{$><$}mml:mrow{$><$}mml:mi{$>$}c{$<$}/mml:mi{$><$}/mml:mrow{$><$}/mml:msub{$><$}/mml:math{$>$} for 20 diverse protein sequences, and we show that these three properties are highly correlated. We also highlight that these correlations are not specific to our model or simulation methodology by comparing between different pairwise potentials and with data from other work. We, therefore, suggest that smaller simulations or experiments to determine TθTθ{$<$}mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"{$><$}mml:msub{$><$}mml:mrow{$><$}mml:mi{$>$}T{$<$}/mml:mi{$><$}/mml:mrow{$><$}mml:mrow{$><$}mml:mi{$>$}θ{$<$}/mml:mi{$><$}/mml:mrow{$><$}/mml:msub{$><$}/mml:math{$>$} or TBTB{$<$}mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML"{$><$}mml:msub{$><$}mml:mrow{$><$}mml:mi{$>$}T{$<$}/mml:mi{$><$}/mml:mrow{$><$}mml:mrow{$><$}mml:mi{$>$}B{$<$}/mml:mi{$><$}/mml:mrow{$><$}/mml:msub{$><$}/mml:math{$>$} can provide useful insights into the corresponding phase behavior.},
  eprint = {30217894},
  eprinttype = {pmid},
  file = {/home/brandon/Zotero/storage/CG6JDUAA/Dignon et al. - 2018 - Relation between single-molecule properties and ph.pdf;/home/brandon/Zotero/storage/8FVEX9RU/9929.html},
  keywords = {experimental,intrinsically disordered proteins,liquid–liquid phase separation,membraneless organelles},
  langid = {english},
  number = {40}
}

@article{dignon.etal2018a,
  title = {Sequence Determinants of Protein Phase Behavior from a Coarse-Grained Model},
  author = {Dignon, Gregory L. and Zheng, Wenwei and Kim, Young C. and Best, Robert B. and Mittal, Jeetain},
  date = {2018-01-24},
  journaltitle = {PLOS Computational Biology},
  volume = {14},
  pages = {e1005941},
  publisher = {{Public Library of Science}},
  issn = {1553-7358},
  doi = {10.1371/journal.pcbi.1005941},
  url = {https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005941},
  urldate = {2020-05-16},
  abstract = {Membraneless organelles important to intracellular compartmentalization have recently been shown to comprise assemblies of proteins which undergo liquid-liquid phase separation (LLPS). However, many proteins involved in this phase separation are at least partially disordered. The molecular mechanism and the sequence determinants of this process are challenging to determine experimentally owing to the disordered nature of the assemblies, motivating the use of theoretical and simulation methods. This work advances a computational framework for conducting simulations of LLPS with residue-level detail, and allows for the determination of phase diagrams and coexistence densities of proteins in the two phases. The model includes a short-range contact potential as well as a simplified treatment of electrostatic energy. Interaction parameters are optimized against experimentally determined radius of gyration data for multiple unfolded or intrinsically disordered proteins (IDPs). These models are applied to two systems which undergo LLPS: the low complexity domain of the RNA-binding protein FUS and the DEAD-box helicase protein LAF-1. We develop a novel simulation method to determine thermodynamic phase diagrams as a function of the total protein concentration and temperature. We show that the model is capable of capturing qualitative changes in the phase diagram due to phosphomimetic mutations of FUS and to the presence or absence of the large folded domain in LAF-1. We also explore the effects of chain-length, or multivalency, on the phase diagram, and obtain results consistent with Flory-Huggins theory for polymers. Most importantly, the methodology presented here is flexible so that it can be easily extended to other pair potentials, be used with other enhanced sampling methods, and may incorporate additional features for biological systems of interest.},
  file = {/home/brandon/Zotero/storage/EAETS889/Dignon et al. - 2018 - Sequence determinants of protein phase behavior fr.pdf;/home/brandon/Zotero/storage/CWFWZX3U/article.html},
  keywords = {Biochemical simulations,Helicases,Intrinsically disordered proteins,Phase determination,Phase diagrams,Protein interactions,Protein sequencing,Simulation and modeling},
  langid = {english},
  number = {1}
}

@article{eastman.etal2017,
  title = {{{OpenMM}} 7: {{Rapid}} Development of High Performance Algorithms for Molecular Dynamics},
  shorttitle = {{{OpenMM}} 7},
  author = {Eastman, Peter and Swails, Jason and Chodera, John D. and McGibbon, Robert T. and Zhao, Yutong and Beauchamp, Kyle A. and Wang, Lee-Ping and Simmonett, Andrew C. and Harrigan, Matthew P. and Stern, Chaya D. and Wiewiora, Rafal P. and Brooks, Bernard R. and Pande, Vijay S.},
  date = {2017-07-26},
  journaltitle = {PLOS Computational Biology},
  volume = {13},
  pages = {e1005659},
  publisher = {{Public Library of Science}},
  issn = {1553-7358},
  doi = {10.1371/journal.pcbi.1005659},
  url = {https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005659},
  urldate = {2020-05-09},
  abstract = {OpenMM is a molecular dynamics simulation toolkit with a unique focus on extensibility. It allows users to easily add new features, including forces with novel functional forms, new integration algorithms, and new simulation protocols. Those features automatically work on all supported hardware types (including both CPUs and GPUs) and perform well on all of them. In many cases they require minimal coding, just a mathematical description of the desired function. They also require no modification to OpenMM itself and can be distributed independently of OpenMM. This makes it an ideal tool for researchers developing new simulation methods, and also allows those new methods to be immediately available to the larger community.},
  file = {/home/brandon/Zotero/storage/CNWP7BKX/Eastman et al. - 2017 - OpenMM 7 Rapid development of high performance al.pdf;/home/brandon/Zotero/storage/KL9KBM4D/article.html},
  keywords = {Algorithms,Amoebas,Biochemical simulations,Molecular dynamics,Monte Carlo method,Programming languages,Simulation and modeling,Source code},
  langid = {english},
  number = {7}
}

@inproceedings{ellson.etal2003,
  title = {Graphviz and Dynagraph – Static and Dynamic Graph Drawing Tools},
  booktitle = {Graph {{Drawing Software}}},
  author = {Ellson, John and Gansner, Emden R. and Koutsofios, Eleftherios and North, Stephen C. and Woodhull, Gordon},
  date = {2003},
  pages = {127--148},
  publisher = {{Springer-Verlag}},
  abstract = {Graphviz is a collection of software for viewing and manipulating abstract graphs. It provides graph visualization for tools and web sites in domains such as software engineering, networking, databases, knowledge representation, and bio-informatics. Hundreds of thousands of copies have been distributed under an open source license. The core of Graphviz consists of implementations of various common types of graph layout. These layouts can be used via a C library interface, streambased command line tools, graphical user interfaces and web browsers. Aspects which distinguish the software include a retention of stream-based interfaces in conjunction with a variety of tools for graph manipulation, and support for a wide assortment of graphical features and output formats. The former makes it possible to write high-level programs for querying, modifying and displaying graphs. The latter allows Graphviz to be useful in a wide range of areas, with applications far removed from academic exercises. The algorithms of Graphviz concentrate on static layouts. Dynagraph is a sibling of Graphviz, with algorithms and interactive programs for incremental layout. At the library level, it provides an object-oriented interface for graphs and graph algorithms.},
  file = {/home/brandon/Zotero/storage/BIUVHIUP/Ellson et al. - 2003 - Graphviz and dynagraph – static and dynamic graph .pdf;/home/brandon/Zotero/storage/AUXI7AJH/summary.html}
}

@article{fan.etal2014,
  title = {How Thermally Activated Deformation Starts in Metallic Glass},
  author = {Fan, Yue and Iwashita, Takuya and Egami, Takeshi},
  date = {2014-09-24},
  journaltitle = {Nat Commun},
  volume = {5},
  pages = {1--7},
  issn = {2041-1723},
  doi = {10.1038/ncomms6083},
  url = {https://www.nature.com/articles/ncomms6083},
  urldate = {2019-10-24},
  abstract = {Understanding the atomic-scale processes by which deformation occurs in a metallic glass remains a challenge. Here, the authors apply atomic-scale simulations to study the mechanism by which thermally activated deformation initiates in a model binary metallic glass.},
  file = {/home/brandon/Zotero/storage/HRQBU74L/Fan et al. - 2014 - How thermally activated deformation starts in meta.pdf;/home/brandon/Zotero/storage/GYYVTT5M/ncomms6083.html},
  keywords = {computational,glass},
  langid = {english},
  number = {1}
}

@article{freddolino.etal2008,
  title = {Ten-{{Microsecond Molecular Dynamics Simulation}} of a {{Fast}}-{{Folding WW Domain}}},
  author = {Freddolino, Peter L. and Liu, Feng and Gruebele, Martin and Schulten, Klaus},
  date = {2008-05-15},
  journaltitle = {Biophysical Journal},
  volume = {94},
  pages = {L75-L77},
  publisher = {{Elsevier}},
  issn = {0006-3495},
  doi = {10.1529/biophysj.108.131565},
  url = {https://www.cell.com/biophysj/abstract/S0006-3495(08)70374-6},
  urldate = {2020-05-09},
  eprint = {18339748},
  eprinttype = {pmid},
  file = {/home/brandon/Zotero/storage/NETWDEIT/Freddolino et al. - 2008 - Ten-Microsecond Molecular Dynamics Simulation of a.pdf;/home/brandon/Zotero/storage/QSESDK9M/S0006-3495(08)70374-6.html},
  langid = {english},
  number = {10}
}

@article{gansner.etal1993,
  title = {A {{Technique}} for {{Drawing Directed Graphs}}},
  author = {Gansner, Emden R. and Koutsofios, Eleftherios and North, Stephen C. and Vo, Kiem-phong},
  date = {1993},
  journaltitle = {Ieee Transactions on Software Engineering},
  volume = {19},
  pages = {214--230},
  abstract = {We describe a four-pass algorithm for drawing directed graphs. The first pass finds an  optimal rank assignment using a network simplex algorithm. The second pass sets the  vertex order within ranks by an iterative heuristic incorporating a novel weight function and  local transpositions to reduce crossings. The third pass finds optimal coordinates for nodes  by constructing and ranking an auxiliary graph. The fourth pass makes splines to draw  edges. The algorithm makes good drawings and runs fast.},
  file = {/home/brandon/Zotero/storage/Z9HMIGLX/Gansner et al. - 1993 - A Technique for Drawing Directed Graphs.pdf;/home/brandon/Zotero/storage/VR8P7LY2/summary.html},
  number = {3}
}

@article{glaser.etal2015,
  title = {Strong Scaling of General-Purpose Molecular Dynamics Simulations on {{GPUs}}},
  author = {Glaser, Jens and Nguyen, Trung Dac and Anderson, Joshua A. and Lui, Pak and Spiga, Filippo and Millan, Jaime A. and Morse, David C. and Glotzer, Sharon C.},
  date = {2015-07-01},
  journaltitle = {Computer Physics Communications},
  volume = {192},
  pages = {97--107},
  issn = {0010-4655},
  doi = {10.1016/j.cpc.2015.02.028},
  url = {http://www.sciencedirect.com/science/article/pii/S0010465515000867},
  urldate = {2020-05-09},
  abstract = {We describe a highly optimized implementation of MPI domain decomposition in a GPU-enabled, general-purpose molecular dynamics code, HOOMD-blue (Anderson and Glotzer, 2013). Our approach is inspired by a traditional CPU-based code, LAMMPS (Plimpton, 1995), but is implemented within a code that was designed for execution on GPUs from the start (Anderson et~al., 2008). The software supports short-ranged pair force and bond force fields and achieves optimal GPU performance using an autotuning algorithm. We are able to demonstrate equivalent or superior scaling on up to 3375 GPUs in Lennard-Jones and dissipative particle dynamics (DPD) simulations of up to 108 million particles. GPUDirect RDMA capabilities in recent GPU generations provide better performance in full double precision calculations. For a representative polymer physics application, HOOMD-blue 1.0 provides an effective GPU vs. CPU node speed-up of 12.5×.},
  file = {/home/brandon/Zotero/storage/MFG8YFI3/Glaser et al. - 2015 - Strong scaling of general-purpose molecular dynami.pdf;/home/brandon/Zotero/storage/PGTBMLIM/S0010465515000867.html},
  keywords = {Domain decomposition,LAMMPS,Molecular dynamics,MPI/CUDA,Multi-GPU,Strong scaling,Weak scaling},
  langid = {english}
}

@article{glotzer.etal1994,
  title = {Monte {{Carlo}} Simulations of Phase Separation in Chemically Reactive Binary Mixtures},
  author = {Glotzer, Sharon C. and Stauffer, Dietrich and Jan, Naeem},
  date = {1994-06-27},
  journaltitle = {Phys. Rev. Lett.},
  volume = {72},
  pages = {4109--4112},
  publisher = {{American Physical Society}},
  doi = {10.1103/PhysRevLett.72.4109},
  url = {https://link.aps.org/doi/10.1103/PhysRevLett.72.4109},
  urldate = {2020-05-28},
  abstract = {We present Monte Carlo simulations of a binary mixture simultaneously undergoing spinodal decomposition and the chemical reaction A⇄B. The competing processes give rise to novel, steady-state pattern formation with domain size scaling with reaction rate to a power, s, which equals the domain growth exponent, α, in the absence of chemical reactions. Our findings support recent numerical simulations of a Cahn-Hilliard-type model, suggesting that chemical reactions can be used to stabilize and tune patterns arising during phase separation.},
  file = {/home/brandon/Zotero/storage/UGIETHQN/Glotzer et al. - 1994 - Monte Carlo simulations of phase separation in che.pdf;/home/brandon/Zotero/storage/ENH2YUEW/PhysRevLett.72.html},
  number = {26}
}

@article{gowers.etal2016,
  title = {{{MDAnalysis}}: {{A Python Package}} for the {{Rapid Analysis}} of {{Molecular Dynamics Simulations}}},
  shorttitle = {{{MDAnalysis}}},
  author = {Gowers, Richard J. and Linke, Max and Barnoud, Jonathan and Reddy, Tyler J. E. and Melo, Manuel N. and Seyler, Sean L. and Domański, Jan and Dotson, David L. and Buchoux, Sébastien and Kenney, Ian M. and Beckstein, Oliver},
  date = {2016},
  journaltitle = {Proceedings of the 15th Python in Science Conference},
  pages = {98--105},
  doi = {10.25080/Majora-629e541a-00e},
  url = {https://conference.scipy.org/proceedings/scipy2016/oliver_beckstein.html},
  urldate = {2020-07-01},
  eventtitle = {Proceedings of the 15th {{Python}} in {{Science Conference}}},
  file = {/home/brandon/Zotero/storage/NFYR4IXS/Gowers et al. - 2016 - MDAnalysis A Python Package for the Rapid Analysi.pdf;/home/brandon/Zotero/storage/UWYGWATU/oliver_beckstein.html}
}

@article{guzman.etal2019,
  title = {{{ESPResSo}}++ 2.0: {{Advanced}} Methods for Multiscale Molecular Simulation},
  shorttitle = {{{ESPResSo}}++ 2.0},
  author = {Guzman, Horacio V. and Tretyakov, Nikita and Kobayashi, Hideki and Fogarty, Aoife C. and Kreis, Karsten and Krajniak, Jakub and Junghans, Christoph and Kremer, Kurt and Stuehn, Torsten},
  date = {2019-05-01},
  journaltitle = {Computer Physics Communications},
  volume = {238},
  pages = {66--76},
  issn = {0010-4655},
  doi = {10.1016/j.cpc.2018.12.017},
  url = {http://www.sciencedirect.com/science/article/pii/S0010465518304399},
  urldate = {2020-07-01},
  abstract = {Molecular simulation is a scientific tool used in many fields including material science and biology. This requires constant development and enhancement of algorithms within molecular simulation software packages. Here, we present computational tools for multiscale modeling developed and implemented within the ESPResSo++ package. These include the latest applications of the adaptive resolution scheme, the hydrodynamic interactions through a lattice Boltzmann solvent coupled to particle-based molecular dynamics, the implementation of the hierarchical strategy for equilibrating long-chained polymer melts and a heterogeneous spatial domain decomposition. The software design of ESPResSo++ has kept its highly modular C++ kernel with a Python user interface. Moreover, it has been enhanced by automatic scripts that parse configurations from other established packages, providing scientists with the ability to rapidly set up their simulations.},
  file = {/home/brandon/Zotero/storage/VZYZQKKG/Guzman et al. - 2019 - ESPResSo++ 2.0 Advanced methods for multiscale mo.pdf;/home/brandon/Zotero/storage/67UXRQL6/S0010465518304399.html},
  keywords = {Coarse graining,Computational physics,High performance computer,Lattice Boltzmann,Molecular dynamics,Molecular simulations,Multiscale modeling,Soft matter},
  langid = {english}
}

@article{hunter2007,
  ids = {hunter2007},
  title = {Matplotlib: {{A 2D Graphics Environment}}},
  shorttitle = {Matplotlib},
  author = {Hunter, John D.},
  date = {2007-05-01},
  journaltitle = {Computing in Science \& Engineering},
  volume = {9},
  pages = {90--95},
  publisher = {{IEEE Computer Society}},
  issn = {1558-366X},
  doi = {10.1109/MCSE.2007.55},
  abstract = {Matplotlib is a 2D graphics package used for Python for application development, interactive scripting,and publication-quality image generation across user interfaces and operating systems},
  eventtitle = {Computing in {{Science Engineering}}},
  file = {/home/brandon/Zotero/storage/AF6L2Q9L/Hunter - 2007 - Matplotlib A 2D Graphics Environment.pdf;/home/brandon/Zotero/storage/R8TDBQ3F/4160265.html;/home/brandon/Zotero/storage/UD88F9HR/MCSE.2007.html},
  keywords = {2D graphics package,application development,computer graphics,Computer languages,Equations,Graphical user interfaces,Graphics,Image generation,interactive scripting,Interpolation,mathematics computing,Matplotlib,object-oriented programming,operating system,Operating systems,Packaging,Programming profession,publication-quality image generation,Python,scientific programming,scripting languages,software packages,user interface,User interfaces},
  number = {3}
}

@software{jakob.etal2017,
  title = {Pybind11 -- {{Seamless}} Operability between {{C}}++11 and {{Python}}},
  author = {Jakob, Wenzel and Rhinelander, Jason and Moldovan, Dean},
  date = {2017},
  url = {https://github.com/pybind/pybind11}
}

@incollection{klein.etal2016,
  title = {A {{Hierarchical}}, {{Component Based Approach}} to {{Screening Properties}} of {{Soft Matter}}},
  booktitle = {Foundations of {{Molecular Modeling}} and {{Simulation}}: {{Select Papers}} from {{FOMMS}} 2015},
  author = {Klein, Christoph and Sallai, János and Jones, Trevor J. and Iacovella, Christopher R. and McCabe, Clare and Cummings, Peter T.},
  editor = {Snurr, Randall Q and Adjiman, Claire S. and Kofke, David A.},
  date = {2016},
  pages = {79--92},
  publisher = {{Springer}},
  location = {{Singapore}},
  doi = {10.1007/978-981-10-1128-3_5},
  url = {https://doi.org/10.1007/978-981-10-1128-3_5},
  urldate = {2020-06-17},
  abstract = {In prior work, Sallai, et al. introduced the concept and algorithms of building molecular topologies through the use of a hierarchical data structure and the use of an affine coordinate transformation to connect molecular components. In this work, we expand upon the original concept and present a refined version of this software, termed mBuild , which is a general tool for constructing arbitrarily complex input configurations for molecular simulation in a programmatic fashion. Basic molecular components are connected using an equivalence operator which reduces and often removes the need for users to explicitly rotate and translate components as they assemble systems. Additionally, the programmatic nature of this approach and integration with the scientific Python ecosystem seamlessly exposes high-level variables that users can tune to alter the chemical composition of their systems, such as mixtures of polymers of different chain lengths and surface patterning. Leveraging these features, we demonstrate how mBuild serves as a stepping stone towards screening and performing optimizations in chemical parameter space of complex materials by performing automated screening studies of monolayer systems as a function of graft type, degree of polymerization, and surface density.},
  isbn = {978-981-10-1128-3},
  keywords = {Molecular dynamics,Software,System construction},
  langid = {english},
  series = {Molecular {{Modeling}} and {{Simulation}}}
}

@article{klein.etal2019,
  title = {Formalizing Atom-Typing and the Dissemination of Force Fields with Foyer},
  author = {Klein, Christoph and Summers, Andrew Z. and Thompson, Matthew W. and Gilmer, Justin B. and McCabe, Clare and Cummings, Peter T. and Sallai, Janos and Iacovella, Christopher R.},
  date = {2019-09-01},
  journaltitle = {Computational Materials Science},
  volume = {167},
  pages = {215--227},
  issn = {0927-0256},
  doi = {10.1016/j.commatsci.2019.05.026},
  url = {http://www.sciencedirect.com/science/article/pii/S0927025619303040},
  urldate = {2020-06-17},
  abstract = {A key component to enhancing reproducibility in the molecular simulation community is reducing ambiguity in the parameterization of molecular models used to perform a study. Ambiguity in molecular models often stems from inadequate usage documentation of molecular force fields and the fact that force fields are not typically disseminated in a format that is directly usable by software. Specifically, the lack of a generally applicable scheme for the annotation of the rules of a particular force field and a general purpose tool for performing automated parameterization (i.e., atom-typing) based on these rules, may lead to errors in model parameterization that are not easily identified. Here, we present Foyer, an open-source Python tool that enables users to define and apply force field atom-typing rules in a format that is both human- and machine-readable and provides a framework for force field dissemination, thus eliminating ambiguity in atom-typing and improving reproducibility. Foyer defines force fields in an XML format, where SMARTS strings are used to define the chemical context of a particular atom type and “overrides” are used to set rule precedence, rather than a rigid hierarchical scheme. Herein we describe the underlying methodology and force field annotation scheme of the Foyer software, demonstrate its application in several use-cases, and discuss specific aspects of the Foyer approach that are designed to improve reproducibility.},
  file = {/home/brandon/Zotero/storage/KAKS9FHC/Klein et al. - 2019 - Formalizing atom-typing and the dissemination of f.pdf;/home/brandon/Zotero/storage/5EPGSNXV/S0927025619303040.html},
  keywords = {Force fields,Molecular simulation,Open-source software,Reproducibility},
  langid = {english}
}

@inproceedings{lam.etal2015,
  title = {Numba: A {{LLVM}}-Based {{Python JIT}} Compiler},
  shorttitle = {Numba},
  booktitle = {Proceedings of the {{Second Workshop}} on the {{LLVM Compiler Infrastructure}} in {{HPC}}},
  author = {Lam, Siu Kwan and Pitrou, Antoine and Seibert, Stanley},
  date = {2015-11-15},
  pages = {1--6},
  publisher = {{Association for Computing Machinery}},
  location = {{Austin, Texas}},
  doi = {10.1145/2833157.2833162},
  url = {https://doi.org/10.1145/2833157.2833162},
  urldate = {2020-05-09},
  abstract = {Dynamic, interpreted languages, like Python, are attractive for domain-experts and scientists experimenting with new ideas. However, the performance of the interpreter is often a barrier when scaling to larger data sets. This paper presents a just-in-time compiler for Python that focuses in scientific and array-oriented computing. Starting with the simple syntax of Python, Numba compiles a subset of the language into efficient machine code that is comparable in performance to a traditional compiled language. In addition, we share our experience in building a JIT compiler using LLVM[1].},
  file = {/home/brandon/Zotero/storage/YEFENMYF/Lam et al. - 2015 - Numba a LLVM-based Python JIT compiler.pdf},
  isbn = {978-1-4503-4005-2},
  keywords = {compiler,LLVM,Python},
  series = {{{LLVM}} '15}
}

@article{martin2013,
  title = {{{MCCCS Towhee}}: A Tool for {{Monte Carlo}} Molecular Simulation},
  shorttitle = {{{MCCCS Towhee}}},
  author = {Martin, Marcus G.},
  date = {2013-12-01},
  journaltitle = {Molecular Simulation},
  volume = {39},
  pages = {1212--1222},
  publisher = {{Taylor \& Francis}},
  issn = {0892-7022},
  doi = {10.1080/08927022.2013.828208},
  url = {https://doi.org/10.1080/08927022.2013.828208},
  urldate = {2020-05-28},
  abstract = {The history of the Monte Carlo for complex chemical systems Towhee open source Monte Carlo molecular simulation tool is discussed. A proof is given that the Widom insertion method for computing the chemical potential is formally correct even when combined with the most general version of arbitrary trial distribution configurational-bias Monte Carlo. A simulation strategy for computing single component vapour–liquid phase coexistence curves is presented as a guide for inexperienced practitioners of Monte Carlo simulations. A review of papers that cite the Towhee code is presented. The paper concludes with a discussion about releasing and sustaining a simulation package that uses an open source software license.},
  file = {/home/brandon/Zotero/storage/NW2VA3Z6/Martin - 2013 - MCCCS Towhee a tool for Monte Carlo molecular sim.pdf;/home/brandon/Zotero/storage/AJ7TDI6D/08927022.2013.html},
  keywords = {chemical potential,molecular simulation,Monte Carlo,open source software},
  number = {14-15}
}

@article{mcgibbon.etal2015,
  title = {{{MDTraj}}: {{A Modern Open Library}} for the {{Analysis}} of {{Molecular Dynamics Trajectories}}},
  shorttitle = {{{MDTraj}}},
  author = {McGibbon, Robert T. and Beauchamp, Kyle A. and Harrigan, Matthew P. and Klein, Christoph and Swails, Jason M. and Hernández, Carlos X. and Schwantes, Christian R. and Wang, Lee-Ping and Lane, Thomas J. and Pande, Vijay S.},
  date = {2015-10-20},
  journaltitle = {Biophysical Journal},
  volume = {109},
  pages = {1528--1532},
  issn = {0006-3495},
  doi = {10.1016/j.bpj.2015.08.015},
  url = {http://www.sciencedirect.com/science/article/pii/S0006349515008267},
  urldate = {2020-07-01},
  abstract = {As molecular dynamics (MD) simulations continue to evolve into powerful computational tools for studying complex biomolecular systems, the necessity of flexible and easy-to-use software tools for the analysis of these simulations is growing. We have developed MDTraj, a modern, lightweight, and fast software package for analyzing MD simulations. MDTraj reads and writes trajectory data in a wide variety of commonly used formats. It provides a large number of trajectory analysis capabilities including minimal root-mean-square-deviation calculations, secondary structure assignment, and the extraction of common order parameters. The package has a strong focus on interoperability with the wider scientific Python ecosystem, bridging the gap between MD data and the rapidly growing collection of industry-standard statistical analysis and visualization tools in Python. MDTraj is a powerful and user-friendly software package that simplifies the analysis of MD data and connects these datasets with the modern interactive data science software ecosystem in Python.},
  file = {/home/brandon/Zotero/storage/WHAZAPNX/McGibbon et al. - 2015 - MDTraj A Modern Open Library for the Analysis of .pdf;/home/brandon/Zotero/storage/2LQ9Z9SA/S0006349515008267.html},
  langid = {english},
  number = {8}
}

@article{mckinney2010,
  title = {Data {{Structures}} for {{Statistical Computing}} in {{Python}}},
  author = {McKinney, Wes},
  date = {2010},
  journaltitle = {Proceedings of the 9th Python in Science Conference},
  pages = {56--61},
  doi = {10.25080/Majora-92bf1922-00a},
  url = {https://conference.scipy.org/proceedings/scipy2010/mckinney.html},
  urldate = {2020-05-09},
  eventtitle = {Proceedings of the 9th {{Python}} in {{Science Conference}}},
  file = {/home/brandon/Zotero/storage/SM45BKX4/McKinney - 2010 - Data Structures for Statistical Computing in Pytho.pdf;/home/brandon/Zotero/storage/VEKMVEH9/mckinney.html}
}

@article{metropolis.etal1953,
  title = {Equation of {{State Calculations}} by {{Fast Computing Machines}}},
  author = {Metropolis, Nicholas and Rosenbluth, Arianna W. and Rosenbluth, Marshall N. and Teller, Augusta H. and Teller, Edward},
  date = {1953-06-01},
  journaltitle = {J. Chem. Phys.},
  volume = {21},
  pages = {1087--1092},
  publisher = {{American Institute of Physics}},
  issn = {0021-9606},
  doi = {10.1063/1.1699114},
  url = {https://aip.scitation.org/doi/abs/10.1063/1.1699114},
  urldate = {2020-05-09},
  file = {/home/brandon/Zotero/storage/SD3C9TY7/Metropolis et al. - 1953 - Equation of State Calculations by Fast Computing M.pdf;/home/brandon/Zotero/storage/6WBY7QN9/1.html},
  number = {6}
}

@article{michaud-agrawal.etal2011,
  title = {{{MDAnalysis}}: {{A}} Toolkit for the Analysis of Molecular Dynamics Simulations},
  shorttitle = {{{MDAnalysis}}},
  author = {Michaud‐Agrawal, Naveen and Denning, Elizabeth J. and Woolf, Thomas B. and Beckstein, Oliver},
  date = {2011},
  journaltitle = {Journal of Computational Chemistry},
  volume = {32},
  pages = {2319--2327},
  issn = {1096-987X},
  doi = {10.1002/jcc.21787},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.21787},
  urldate = {2020-07-01},
  abstract = {MDAnalysis is an object-oriented library for structural and temporal analysis of molecular dynamics (MD) simulation trajectories and individual protein structures. It is written in the Python language with some performance-critical code in C. It uses the powerful NumPy package to expose trajectory data as fast and efficient NumPy arrays. It has been tested on systems of millions of particles. Many common file formats of simulation packages including CHARMM, Gromacs, Amber, and NAMD and the Protein Data Bank format can be read and written. Atoms can be selected with a syntax similar to CHARMM's powerful selection commands. MDAnalysis enables both novice and experienced programmers to rapidly write their own analytical tools and access data stored in trajectories in an easily accessible manner that facilitates interactive explorative analysis. MDAnalysis has been tested on and works for most Unix-based platforms such as Linux and Mac OS X. It is freely available under the GNU General Public License from http://mdanalysis.googlecode.com. © 2011 Wiley Periodicals, Inc. J Comput Chem 2011},
  file = {/home/brandon/Zotero/storage/HD959KVN/Michaud‐Agrawal et al. - 2011 - MDAnalysis A toolkit for the analysis of molecula.pdf;/home/brandon/Zotero/storage/QGKYUMMA/jcc.html},
  keywords = {analysis,membrane systems,molecular dynamics simulations,object-oriented design,proteins,Python programming language,software},
  langid = {english},
  number = {10}
}

@article{niethammer.etal2014,
  title = {Ls1 Mardyn: {{The Massively Parallel Molecular Dynamics Code}} for {{Large Systems}}},
  shorttitle = {Ls1 Mardyn},
  author = {Niethammer, Christoph and Becker, Stefan and Bernreuther, Martin and Buchholz, Martin and Eckhardt, Wolfgang and Heinecke, Alexander and Werth, Stephan and Bungartz, Hans-Joachim and Glass, Colin W. and Hasse, Hans and Vrabec, Jadran and Horsch, Martin},
  date = {2014-10-14},
  journaltitle = {J. Chem. Theory Comput.},
  volume = {10},
  pages = {4455--4464},
  publisher = {{American Chemical Society}},
  issn = {1549-9618},
  doi = {10.1021/ct500169q},
  url = {https://doi.org/10.1021/ct500169q},
  urldate = {2020-05-09},
  abstract = {The molecular dynamics simulation code ls1 mardyn is presented. It is a highly scalable code, optimized for massively parallel execution on supercomputing architectures and currently holds the world record for the largest molecular simulation with over four trillion particles. It enables the application of pair potentials to length and time scales that were previously out of scope for molecular dynamics simulation. With an efficient dynamic load balancing scheme, it delivers high scalability even for challenging heterogeneous configurations. Presently, multicenter rigid potential models based on Lennard-Jones sites, point charges, and higher-order polarities are supported. Due to its modular design, ls1 mardyn can be extended to new physical models, methods, and algorithms, allowing future users to tailor it to suit their respective needs. Possible applications include scenarios with complex geometries, such as fluids at interfaces, as well as nonequilibrium molecular dynamics simulation of heat and mass transfer.},
  file = {/home/brandon/Zotero/storage/38AIQJUK/Niethammer et al. - 2014 - ls1 mardyn The Massively Parallel Molecular Dynam.pdf},
  number = {10}
}

@incollection{paszke.etal2019,
  title = {{{PyTorch}}: {{An Imperative Style}}, {{High}}-{{Performance Deep Learning Library}}},
  shorttitle = {{{PyTorch}}},
  booktitle = {Advances in {{Neural Information Processing Systems}} 32},
  author = {Paszke, Adam and Gross, Sam and Massa, Francisco and Lerer, Adam and Bradbury, James and Chanan, Gregory and Killeen, Trevor and Lin, Zeming and Gimelshein, Natalia and Antiga, Luca and Desmaison, Alban and Kopf, Andreas and Yang, Edward and DeVito, Zachary and Raison, Martin and Tejani, Alykhan and Chilamkurthy, Sasank and Steiner, Benoit and Fang, Lu and Bai, Junjie and Chintala, Soumith},
  editor = {Wallach, H. and Larochelle, H. and Beygelzimer, A. and d\textbackslash textquotesingle Alché-Buc, F. and Fox, E. and Garnett, R.},
  date = {2019},
  pages = {8026--8037},
  publisher = {{Curran Associates, Inc.}},
  url = {http://papers.nips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf},
  urldate = {2020-05-16},
  file = {/home/brandon/Zotero/storage/IIEUYPW5/Paszke et al. - 2019 - PyTorch An Imperative Style, High-Performance Dee.pdf;/home/brandon/Zotero/storage/HVZGZJGH/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.html}
}

@article{pedregosa.etal2011,
  title = {Scikit-Learn: {{Machine Learning}} in {{Python}}},
  shorttitle = {Scikit-Learn},
  author = {Pedregosa, Fabian and Varoquaux, Gaël and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and Vanderplas, Jake and Passos, Alexandre and Cournapeau, David and Brucher, Matthieu and Perrot, Matthieu and Duchesnay, Édouard},
  date = {2011},
  journaltitle = {Journal of Machine Learning Research},
  volume = {12},
  pages = {2825--2830},
  issn = {1533-7928},
  url = {http://jmlr.org/papers/v12/pedregosa11a.html},
  urldate = {2020-05-09},
  file = {/home/brandon/Zotero/storage/DX842FN2/Pedregosa et al. - 2011 - Scikit-learn Machine Learning in Python.pdf;/home/brandon/Zotero/storage/GYWMVNPX/pedregosa11a.html},
  number = {85}
}

@report{plimpton1993,
  title = {Fast Parallel Algorithms for Short-Range Molecular Dynamics},
  author = {Plimpton, S.},
  date = {1993-05-01},
  institution = {{Sandia National Labs., Albuquerque, NM (United States)}},
  doi = {10.2172/10176421},
  url = {https://www.osti.gov/biblio/10176421},
  urldate = {2020-05-04},
  abstract = {The U.S. Department of Energy's Office of Scientific and Technical Information},
  file = {/home/brandon/Zotero/storage/QWVWWCWM/Plimpton - 1993 - Fast parallel algorithms for short-range molecular.pdf;/home/brandon/Zotero/storage/YE66EF8A/10176421.html},
  langid = {english},
  number = {SAND-91-1144}
}

@article{ramasubramani.etal2020,
  title = {Freud: {{A}} Software Suite for High Throughput Analysis of Particle Simulation Data},
  shorttitle = {Freud},
  author = {Ramasubramani, Vyas and Dice, Bradley D. and Harper, Eric S. and Spellings, Matthew P. and Anderson, Joshua A. and Glotzer, Sharon C.},
  date = {2020-03-17},
  journaltitle = {Computer Physics Communications},
  pages = {107275},
  issn = {0010-4655},
  doi = {10.1016/j.cpc.2020.107275},
  url = {http://www.sciencedirect.com/science/article/pii/S0010465520300916},
  urldate = {2020-05-04},
  abstract = {The freud~Python package is a library for analyzing simulation data. Written with modern simulation and data analysis workflows in mind, freud~provides a Python interface to fast, parallelized C++ routines that run efficiently on laptops, workstations, and supercomputing clusters. The package provides the core tools for finding particle neighbors in periodic systems, and offers a uniform API to a wide variety of methods implemented using these tools. As such, freud~users can access standard methods such as the radial distribution function as well as newer, more specialized methods such as the potential of mean force and torque and local crystal environment analysis with equal ease. Rather than providing its own trajectory data structure, freud~operates either directly on NumPy arrays or on trajectory data structures provided by other Python packages. This design allows freud~to transparently interface with many trajectory file formats by leveraging the file parsing abilities of other trajectory management tools. By remaining agnostic to its data source, freud~is suitable for analyzing any particle simulation, regardless of the original data representation or simulation method. When used for on-the-fly analysis in conjunction with scriptable simulation software such as HOOMD-blue, freud~enables smart simulations that adapt to the current state of the system, allowing users to study phenomena such as nucleation and growth.
Program summary
Program Title: freud Program Files doi: http://dx.doi.org/10.17632/v7wmv9xcct.1 Licensing provisions: BSD 3-Clause Programming language: Python, C++ Nature of problem: Simulations of coarse-grained, nano-scale, and colloidal particle systems typically require analyses specialized to a particular system. Certain more standardized techniques – including correlation functions, order parameters, and clustering – are computationally intensive tasks that must be carefully implemented to scale to the larger systems common in modern simulations. Solution method: freud~performs a wide variety of particle system analyses, offering a Python API that interfaces with many other tools in computational molecular sciences via NumPy array inputs and outputs. The algorithms in freud~leverage parallelized C++ to scale to large systems and enable real-time analysis. The library’s broad set of features encode few assumptions compared to other analysis packages, enabling analysis of a broader class of data ranging from biomolecular simulations to colloidal experiments. Additional comments including restrictions and unusual features: 1. freud~provides very fast parallel implementations of standard analysis methods like RDFs and correlation functions. 2. freud~includes the reference implementation for the potential of mean force and torque (PMFT). 3. freud~provides various novel methods for characterizing particle environments, including the calculation of descriptors useful for machine learning. The source code is hosted on GitHub (https://github.com/glotzerlab/freud), and documentation is available online (https://freud.readthedocs.io/). The package may be installed via pip install freud-analysis or conda install -c conda-forge freud.},
  file = {/home/brandon/Zotero/storage/NU4ASS67/Ramasubramani et al. - 2020 - freud A software suite for high throughput analys.pdf;/home/brandon/Zotero/storage/IFZDVX3F/S0010465520300916.html},
  keywords = {Computational materials science,Molecular dynamics,Monte Carlo,Simulation analysis},
  langid = {english}
}

@article{reinhart.panagiotopoulos2018,
  title = {Crystal Growth Kinetics of Triblock {{Janus}} Colloids},
  author = {Reinhart, Wesley F. and Panagiotopoulos, Athanassios Z.},
  date = {2018-03-27},
  journaltitle = {J. Chem. Phys.},
  volume = {148},
  pages = {124506},
  publisher = {{American Institute of Physics}},
  issn = {0021-9606},
  doi = {10.1063/1.5021347},
  url = {https://aip.scitation.org/doi/10.1063/1.5021347},
  urldate = {2020-05-11},
  file = {/home/brandon/Zotero/storage/G4VYJ5TW/1.html},
  number = {12}
}

@article{salomon-ferrer.etal2013,
  title = {An Overview of the {{Amber}} Biomolecular Simulation Package},
  author = {Salomon‐Ferrer, Romelia and Case, David A. and Walker, Ross C.},
  date = {2013},
  journaltitle = {WIREs Computational Molecular Science},
  volume = {3},
  pages = {198--210},
  issn = {1759-0884},
  doi = {10.1002/wcms.1121},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/wcms.1121},
  urldate = {2020-05-21},
  abstract = {Molecular dynamics (MD) allows the study of biological and chemical systems at the atomistic level on timescales from femtoseconds to milliseconds. It complements experiment while also offering a way to follow processes difficult to discern with experimental techniques. Numerous software packages exist for conducting MD simulations of which one of the widest used is termed Amber. Here, we outline the most recent developments, since version 9 was released in April 2006, of the Amber and AmberTools MD software packages, referred to here as simply the Amber package. The latest release represents six years of continued development, since version 9, by multiple research groups and the culmination of over 33 years of work beginning with the first version in 1979. The latest release of the Amber package, version 12 released in April 2012, includes a substantial number of important developments in both the scientific and computer science arenas. We present here a condensed vision of what Amber currently supports and where things are likely to head over the coming years. Figure 1 shows the performance in ns/day of the Amber package version 12 on a single-core AMD FX-8120 8-Core 3.6GHz CPU, the Cray XT5 system, and a single GPU GTX680. © 2012 John Wiley \& Sons, Ltd. This article is categorized under: Software {$>$} Molecular Modeling},
  file = {/home/brandon/Zotero/storage/WPLJRGUQ/Salomon‐Ferrer et al. - 2013 - An overview of the Amber biomolecular simulation p.pdf;/home/brandon/Zotero/storage/9TDHZEVK/wcms.html},
  langid = {english},
  number = {2}
}

@article{shah.etal2017,
  title = {Cassandra: {{An}} Open Source {{Monte Carlo}} Package for Molecular Simulation},
  shorttitle = {Cassandra},
  author = {Shah, Jindal K. and Marin‐Rimoldi, Eliseo and Mullen, Ryan Gotchy and Keene, Brian P. and Khan, Sandip and Paluch, Andrew S. and Rai, Neeraj and Romanielo, Lucienne L. and Rosch, Thomas W. and Yoo, Brian and Maginn, Edward J.},
  date = {2017},
  journaltitle = {Journal of Computational Chemistry},
  volume = {38},
  pages = {1727--1739},
  issn = {1096-987X},
  doi = {10.1002/jcc.24807},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.24807},
  urldate = {2020-05-28},
  abstract = {Cassandra is an open source atomistic Monte Carlo software package that is effective in simulating the thermodynamic properties of fluids and solids. The different features and algorithms used in Cassandra are described, along with implementation details and theoretical underpinnings to various methods used. Benchmark and example calculations are shown, and information on how users can obtain the package and contribute to it are provided. © 2017 Wiley Periodicals, Inc.},
  file = {/home/brandon/Zotero/storage/LPXGCP3V/Shah et al. - 2017 - Cassandra An open source Monte Carlo package for .pdf;/home/brandon/Zotero/storage/4LZRBT7N/jcc.html},
  keywords = {atomistic simulation,molecular modeling,Monte Carlo,open source software,thermodynamics},
  langid = {english},
  number = {19}
}

@inproceedings{shaw.etal2009,
  title = {Millisecond-Scale Molecular Dynamics Simulations on {{Anton}}},
  booktitle = {Proceedings of the {{Conference}} on {{High Performance Computing Networking}}, {{Storage}} and {{Analysis}}},
  author = {Shaw, David E. and Dror, Ron O. and Salmon, John K. and Grossman, J. P. and Mackenzie, Kenneth M. and Bank, Joseph A. and Young, Cliff and Deneroff, Martin M. and Batson, Brannon and Bowers, Kevin J. and Chow, Edmond and Eastwood, Michael P. and Ierardi, Douglas J. and Klepeis, John L. and Kuskin, Jeffrey S. and Larson, Richard H. and Lindorff-Larsen, Kresten and Maragakis, Paul and Moraes, Mark A. and Piana, Stefano and Shan, Yibing and Towles, Brian},
  date = {2009-11-14},
  pages = {1--11},
  publisher = {{Association for Computing Machinery}},
  location = {{Portland, Oregon}},
  doi = {10.1145/1654059.1654126},
  url = {https://doi.org/10.1145/1654059.1654126},
  urldate = {2020-05-09},
  abstract = {Anton is a recently completed special-purpose supercomputer designed for molecular dynamics (MD) simulations of biomolecular systems. The machine's specialized hardware dramatically increases the speed of MD calculations, making possible for the first time the simulation of biological molecules at an atomic level of detail for periods on the order of a millisecond---about two orders of magnitude beyond the previous state of the art. Anton is now running simulations on a timescale at which many critically important, but poorly understood phenomena are known to occur, allowing the observation of aspects of protein dynamics that were previously inaccessible to both computational and experimental study. Here, we report Anton's performance when executing actual MD simulations whose accuracy has been validated against both existing MD software and experimental observations. We also discuss the manner in which novel algorithms have been coordinated with Anton's co-designed, application-specific hardware to achieve these results.},
  file = {/home/brandon/Zotero/storage/KTAV99VU/Shaw et al. - 2009 - Millisecond-scale molecular dynamics simulations o.pdf},
  isbn = {978-1-60558-744-8},
  series = {{{SC}} '09}
}

@article{simon.etal2019,
  title = {Supercharging Enables Organized Assembly of Synthetic Biomolecules},
  author = {Simon, Anna J. and Zhou, Yi and Ramasubramani, Vyas and Glaser, Jens and Pothukuchy, Arti and Gollihar, Jimmy and Gerberich, Jillian C. and Leggere, Janelle C. and Morrow, Barrett R. and Jung, Cheulhee and Glotzer, Sharon C. and Taylor, David W. and Ellington, Andrew D.},
  date = {2019-03},
  journaltitle = {Nature Chem},
  volume = {11},
  pages = {204--212},
  publisher = {{Nature Publishing Group}},
  issn = {1755-4349},
  doi = {10.1038/s41557-018-0196-3},
  url = {https://www.nature.com/articles/s41557-018-0196-3},
  urldate = {2020-05-09},
  abstract = {Symmetrical protein oligomers perform key structural and catalytic functions in nature, but engineering such oligomers synthetically is challenging. Now, oppositely supercharged synthetic variants of normally monomeric proteins have been shown to assemble via specific, introduced electrostatic contacts into symmetrical, highly well-defined oligomers.},
  file = {/home/brandon/Zotero/storage/9VPWP7LS/Simon et al. - 2019 - Supercharging enables organized assembly of synthe.pdf;/home/brandon/Zotero/storage/6RA8S2TT/s41557-018-0196-3.html},
  issue = {3},
  langid = {english},
  number = {3}
}

@software{spellings.dice2018,
  title = {Plato},
  author = {Spellings, Matthew and Dice, Bradley D.},
  date = {2018},
  url = {https://github.com/glotzerlab/plato}
}

@article{spellings.etal2017,
  title = {{{GPU}} Accelerated {{Discrete Element Method}} ({{DEM}}) Molecular Dynamics for Conservative, Faceted Particle Simulations},
  author = {Spellings, Matthew and Marson, Ryan L. and Anderson, Joshua A. and Glotzer, Sharon C.},
  date = {2017-04-01},
  journaltitle = {Journal of Computational Physics},
  volume = {334},
  pages = {460--467},
  issn = {0021-9991},
  doi = {10.1016/j.jcp.2017.01.014},
  url = {http://www.sciencedirect.com/science/article/pii/S0021999117300244},
  urldate = {2020-05-09},
  abstract = {Faceted shapes, such as polyhedra, are commonly found in systems of nanoscale, colloidal, and granular particles. Many interesting physical phenomena, like crystal nucleation and growth, vacancy motion, and glassy dynamics are challenging to model in these systems because they require detailed dynamical information at the individual particle level. Within the granular materials community the Discrete Element Method has been used extensively to model systems of anisotropic particles under gravity, with friction. We provide an implementation of this method intended for simulation of hard, faceted nanoparticles, with a conservative Weeks–Chandler–Andersen (WCA) interparticle potential, coupled to a thermodynamic ensemble. This method is a natural extension of classical molecular dynamics and enables rigorous thermodynamic calculations for faceted particles.},
  file = {/home/brandon/Zotero/storage/2RRPTTT7/Spellings et al. - 2017 - GPU accelerated Discrete Element Method (DEM) mole.pdf;/home/brandon/Zotero/storage/4KZY8S5S/S0021999117300244.html},
  keywords = {Anisotropy,Discrete Element Method,GPU,Molecular dynamics},
  langid = {english}
}

@article{steinhardt.etal1983,
  title = {Bond-Orientational Order in Liquids and Glasses},
  author = {Steinhardt, Paul J. and Nelson, David R. and Ronchetti, Marco},
  date = {1983-07-15},
  journaltitle = {Phys. Rev. B},
  volume = {28},
  pages = {784--805},
  publisher = {{American Physical Society}},
  doi = {10.1103/PhysRevB.28.784},
  url = {https://link.aps.org/doi/10.1103/PhysRevB.28.784},
  urldate = {2020-05-11},
  abstract = {Bond-orientational order in molecular-dynamics simulations of supercooled liquids and in models of metallic glasses is studied. Quadratic and third-order invariants formed from bond spherical harmonics allow quantitative measures of cluster symmetries in these systems. A state with short-range translational order, but extended correlations in the orientations of particle clusters, starts to develop about 10\% below the equilibrium melting temperature in a supercooled Lennard-Jones liquid. The order is predominantly icosahedral, although there is also a cubic component which we attribute to the periodic boundary conditions. Results are obtained for liquids cooled in an icosahedral pair potential as well. Only a modest amount of orientational order appears in a relaxed Finney dense-random-packing model. In contrast, we find essentially perfect icosahedral bond correlations in alternative "amorphon" cluster models of glass structure.},
  file = {/home/brandon/Zotero/storage/KS2D44GH/PhysRevB.28.html},
  number = {2}
}

@thesis{stone1998,
  title = {An Effiicient Library for Parallel Ray Tracing and Animation},
  author = {Stone, John Edward},
  date = {1998},
  institution = {{University of Missouri}},
  location = {{Rolla}},
  url = {http://jedi.ks.uiuc.edu/~johns/tachyon/papers/thesis.pdf},
  langid = {english},
  pagetotal = {79}
}

@article{stukowski2009,
  ids = {stukowski2009a},
  title = {Visualization and Analysis of Atomistic Simulation Data with {{OVITO}}–the {{Open Visualization Tool}}},
  author = {Stukowski, Alexander},
  date = {2009-12},
  journaltitle = {Modelling Simul. Mater. Sci. Eng.},
  volume = {18},
  pages = {015012},
  publisher = {{IOP Publishing}},
  issn = {0965-0393},
  doi = {10.1088/0965-0393/18/1/015012},
  url = {https://doi.org/10.1088%2F0965-0393%2F18%2F1%2F015012},
  urldate = {2019-12-18},
  abstract = {The Open Visualization Tool (OVITO) is a new 3D visualization software designed for post-processing atomistic data obtained from molecular dynamics or Monte Carlo simulations. Unique analysis, editing and animations functions are integrated into its easy-to-use graphical user interface. The software is written in object-oriented C++, controllable via Python scripts and easily extendable through a plug-in interface. It is distributed as open-source software and can be downloaded from the website http://ovito.sourceforge.net/.},
  file = {/home/brandon/Zotero/storage/MYRFANJ4/Stukowski - 2009 - Visualization and analysis of atomistic simulation.pdf},
  langid = {english},
  number = {1}
}

@article{thompson.etal2020,
  title = {Towards Molecular Simulations That Are Transparent, Reproducible, Usable by Others, and Extensible ({{TRUE}})},
  author = {Thompson, Matthew W. and Gilmer, Justin B. and Matsumoto, Ray A. and Quach, Co D. and Shamaprasad, Parashara and Yang, Alexander H. and Iacovella, Christopher R. and McCabe, Clare and Cummings, Peter T.},
  date = {2020-06-01},
  journaltitle = {Molecular Physics},
  volume = {118},
  pages = {e1742938},
  publisher = {{Taylor \& Francis}},
  issn = {0026-8976},
  doi = {10.1080/00268976.2020.1742938},
  url = {https://doi.org/10.1080/00268976.2020.1742938},
  urldate = {2020-07-10},
  abstract = {Systems composed of soft matter (e.g. liquids, polymers, foams, gels, colloids, and most biological materials) are ubiquitous in science and engineering, but molecular simulations of such systems pose particular computational challenges, requiring time and/or ensemble-averaged data to be collected over long simulation trajectories for property evaluation. Performing a molecular simulation of a soft matter system involves multiple steps, which have traditionally been performed by researchers in a ‘bespoke’ fashion, resulting in many published soft matter simulations not being reproducible based on the information provided in the publications. To address the issue of reproducibility and to provide tools for computational screening, we have been developing the open-source Molecular Simulation and Design Framework (MoSDeF) software suite. In this paper, we propose a set of principles to create Transparent, Reproducible, Usable by others, and Extensible (TRUE) molecular simulations. MoSDeF facilitates the publication and dissemination of TRUE simulations by automating many of the critical steps in molecular simulation, thus enhancing their reproducibilitya. We provide several examples of TRUE molecular simulations: All of the steps involved in creating, running and extracting properties from the simulations are distributed on open-source platforms (within MoSDeF and on GitHub), thus meeting the definition of TRUE simulations.},
  file = {/home/brandon/Zotero/storage/ZMCT3RDF/Thompson et al. - 2020 - Towards molecular simulations that are transparent.pdf;/home/brandon/Zotero/storage/DTQ9QDZ4/00268976.2020.html},
  keywords = {Molecular dynamics,Monte Carlo simulation,open-source,reproducibility},
  number = {9-10}
}

@article{vanderwalt.etal2011,
  title = {The {{NumPy Array}}: {{A Structure}} for {{Efficient Numerical Computation}}},
  shorttitle = {The {{NumPy Array}}},
  author = {van der Walt, Stefan and Colbert, S. Chris and Varoquaux, Gael},
  date = {2011-03},
  journaltitle = {Computing in Science Engineering},
  volume = {13},
  pages = {22--30},
  issn = {1558-366X},
  doi = {10.1109/MCSE.2011.37},
  abstract = {In the Python world, NumPy arrays are the standard representation for numerical data and enable efficient implementation of numerical computations in a high-level language. As this effort shows, NumPy performance can be improved through three techniques: vectorizing calculations, avoiding copying data in memory, and minimizing operation counts.},
  eventtitle = {Computing in {{Science Engineering}}},
  file = {/home/brandon/Zotero/storage/FGY44YIK/van der Walt et al. - 2011 - The NumPy Array A Structure for Efficient Numeric.pdf;/home/brandon/Zotero/storage/LGMIMP8K/5725236.html},
  keywords = {Arrays,Computational efficiency,data structures,Finite element methods,high level language,high level languages,mathematics computing,numerical analysis,Numerical analysis,numerical computation,numerical computations,numerical data,NumPy,numpy array,Performance evaluation,programming libraries,Python,Python programming language,Resource management,scientific programming,Vector quantization},
  number = {2},
  options = {useprefix=true}
}

@article{virtanen.etal2020,
  title = {{{SciPy}} 1.0: Fundamental Algorithms for Scientific Computing in {{Python}}},
  shorttitle = {{{SciPy}} 1.0},
  author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and van der Walt, Stéfan J. and Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C. J. and Polat, İlhan and Feng, Yu and Moore, Eric W. and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R. and Archibald, Anne M. and Ribeiro, Antônio H. and Pedregosa, Fabian and van Mulbregt, Paul},
  date = {2020-03},
  journaltitle = {Nat Methods},
  volume = {17},
  pages = {261--272},
  publisher = {{Nature Publishing Group}},
  issn = {1548-7105},
  doi = {10.1038/s41592-019-0686-2},
  url = {https://www.nature.com/articles/s41592-019-0686-2},
  urldate = {2020-05-09},
  abstract = {This Perspective describes the development and capabilities of SciPy 1.0, an open source scientific computing library for the Python programming language.},
  file = {/home/brandon/Zotero/storage/P5JS5WNJ/Virtanen et al. - 2020 - SciPy 1.0 fundamental algorithms for scientific c.pdf;/home/brandon/Zotero/storage/BZ23Q7AT/s41592-019-0686-2.html},
  issue = {3},
  langid = {english},
  number = {3}
}

@article{weik.etal2019,
  title = {{{ESPResSo}} 4.0 – an Extensible Software Package for Simulating Soft Matter Systems},
  author = {Weik, Florian and Weeber, Rudolf and Szuttor, Kai and Breitsprecher, Konrad and de Graaf, Joost and Kuron, Michael and Landsgesell, Jonas and Menke, Henri and Sean, David and Holm, Christian},
  date = {2019-03-01},
  journaltitle = {Eur. Phys. J. Spec. Top.},
  volume = {227},
  pages = {1789--1816},
  issn = {1951-6401},
  doi = {10.1140/epjst/e2019-800186-9},
  url = {https://doi.org/10.1140/epjst/e2019-800186-9},
  urldate = {2020-07-01},
  abstract = {ESPResSo is an extensible simulation package for research on soft matter. This versatile molecular dynamics program was originally developed for coarse-grained simulations of charged systems [H.J. Limbach et al., Comput. Phys. Commun. 174, 704 (2006)]. The scope of the software has since broadened considerably: ESPResSo can now be used to simulate systems with length scales spanning from the molecular to the colloidal. Examples include, self-propelled particles in active matter, membranes in biological systems, and the aggregation of soot particles in process engineering. ESPResSo also includes solvers for hydrodynamic and electrokinetic problems, both on the continuum and on the explicit particle level. Since our last description of version 3.1 [A. Arnold et al., Meshfree methods for partial di\_erential equations VI, Lect. Notes Comput. Sci. Eng. 89, 1 (2013)], the software has undergone considerable restructuring. The biggest change is the replacement of the Tcl scripting interface with a much more powerful Python interface. In addition, many new simulation methods have been implemented. In this article, we highlight the changes and improvements made to the interface and code, as well as the new simulation techniques that enable a user of ESPResSo 4.0 to simulate physics that is at the forefront of soft matter research.},
  file = {/home/brandon/Zotero/storage/T9XSBHDA/Weik et al. - 2019 - ESPResSo 4.0 – an extensible software package for .pdf},
  langid = {english},
  number = {14},
  options = {useprefix=true}
}

@online{zotero-593,
  title = {{{CuPy}}},
  url = {https://cupy.chainer.org/},
  urldate = {2020-05-09},
  abstract = {CuPy is NumPy-compatible matrix library accelerated by CUDA},
  file = {/home/brandon/Zotero/storage/3SJEF7UK/cupy.chainer.org.html},
  langid = {english}
}
