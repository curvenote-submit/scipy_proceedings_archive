%%% references for SciPy 2021 paper

@article{Michaud-Agrawal:2011,
	Abstract = {MDAnalysis is an object-oriented library for structural and temporal analysis of molecular dynamics (MD) simulation trajectories and individual protein structures. It is written in the Python language with some performance-critical code in C. It uses the powerful NumPy package to expose trajectory data as fast and efficient NumPy arrays. It has been tested on systems of millions of particles. Many common file formats of simulation packages including CHARMM, Gromacs, and NAMD and the Protein Data Bank format can be read and written.  Atoms can be selected with a syntax similar to CHARMM's powerful selection commands. MDAnalysis enables both novice and experienced programmers to rapidly write their own analytical tools and access data stored in trajectories in an easily accessible manner that facilitates interactive explorative analysis. MDAnalysis has been tested on and works for most Unix-based platforms such as Linux and Mac OS X. It is freely available under the GNU Public License from http://mdanalysis.googlecode.com.},
	Author = {Michaud-Agrawal, Naveen and Denning, Elizabeth Jane and Woolf, Thomas B. and Beckstein, Oliver},
	Date-Added = {2012-11-16 14:27:26 -0700},
	Date-Modified = {2013-03-25 15:48:20 -0700},
	Doi = {10.1002/jcc.21787},
	Journal = {J Comp Chem},
	Keywords = {MDAnalysis, molecular dynamics (MD) simulation, Python},
	Pages = {2319--2327},
	Title = {{MDAnalysis}: A Toolkit for the Analysis of Molecular Dynamics Simulations},
	Volume = 32,
	Year = 2011,
}


@inproceedings{Gowers:2016,
	Abstract = {MDAnalysis (http://mdanalysis.org) is a library for structural and temporal analysis of molecular dynamics (MD) simulation trajectories and individual protein structures. MD simulations of biological molecules have become an important tool to elucidate the relationship between molecular structure and physiological function. Simulations are performed with highly optimized software packages on HPC resources but most codes generate output trajectories in their own formats so that the development of new trajectory analysis algorithms is confined to specific user communities and widespread adoption and further development is delayed. MDAnalysis addresses this problem by abstracting access to the raw simulation data and presenting a uniform object-oriented Python interface to the user. It thus enables users to rapidly write code that is portable and immediately usable in virtually all biomolecular simulation communities. The user interface and modular design work equally well in complex scripted work flows, as foundations for other packages, and for interactive and rapid prototyping work in IPython / Jupyter notebooks, especially together with molecular visualization provided by nglview and time series analysis with pandas. MDAnalysis is written in Python and Cython and uses NumPy arrays for easy interoperability with the wider scientific Python ecosystem. It is widely used and forms the foundation for more specialized biomolecular simulation tools. MDAnalysis is available under the GNU General Public License v2. },
	Address = {Austin, TX},
	Author = {Gowers, Richard J. and Linke, Max and Barnoud, Jonathan and Reddy, Tyler J. E. and Melo, Manuel N. and Seyler, Sean L. and Dotson, David L and Doma{\'n}ski, Jan and Buchoux, S{\'e}bastien and Kenney, Ian M. and Beckstein, Oliver},
	Booktitle = {{P}roceedings of the 15th {P}ython in {S}cience {C}onference},
	Date-Added = {2016-05-31 22:54:55 +0000},
	Date-Modified = {2018-11-09 01:32:12 -0700},
	Doi = {10.25080/Majora-629e541a-00e},
	Editor = {Benthall, Sebastian and Rostrup, Scott},
	Keywords = {MDAnalysis, Python, SPIDAL},
	Organization = {SciPy},
	Pages = {98--105},
	Title = {{MDAnalysis}: A {Python} package for the Rapid Analysis of Molecular Dynamics Simulations},
	Year = 2016,
}

@inproceedings{Fan:2019,
	Abstract = {MDAnalysis is an object-oriented Python library to analyze trajectories from molecular dynamics (MD) simulations in many popular formats. With the development of highly optimized MD software packages on high performance computing (HPC) resources, the size of simulation trajectories is growing up to many terabytes in size. However efficient usage of multicore architecture is a challenge for MDAnalysis, which does not yet provide a standard interface for parallel analysis. To address the challenge, we developed PMDA, a Python library that builds upon MDAnalysis to provide parallel analysis algorithms. PMDA parallelizes common analysis algorithms in MDAnalysis through a task-based approach with the Dask library. We implement a simple split-apply-combine scheme for parallel trajectory analysis. The trajectory is split into blocks, analysis is performed separately and in parallel on each block (\textquotedbl{}apply\textquotedbl{}), then results from each block are gathered and combined. PMDA allows one to perform parallel trajectory analysis with pre-defined analysis tasks. In addition, it provides a common interface that makes it easy to create user-defined parallel analysis modules. PMDA supports all schedulers in Dask, and one can run analysis in a distributed fashion on HPC machines, ad-hoc clusters, a single multi-core workstation or a laptop. We tested the performance of PMDA on single node and multiple nodes on a national supercomputer. The results show that parallelization improves the performance of trajectory analysis and, depending on the analysis task, can cut down time to solution from hours to minutes. Although still in alpha stage, it is already used on resources ranging from multi-core laptops to XSEDE supercomputers to speed up analysis of molecular dynamics trajectories. PMDA is available as open source under the GNU General Public License, version 2 and can be easily installed via the pip and conda package managers. },
	Address = {Austin, TX},
	Author = {{S}hujie {F}an and {M}ax {L}inke and {I}oannis {P}araskevakos and {R}ichard {J}. {G}owers and {M}ichael {G}echt and {O}liver {B}eckstein},
	Booktitle = {{P}roceedings of the 18th {P}ython in {S}cience {C}onference},
	Date-Added = {2019-07-23 18:01:45 -0700},
	Date-Modified = {2019-08-23 11:48:50 -0700},
	Doi = {10.25080/Majora-7ddc1dd1-013},
	Editor = {{C}hris {C}alloway and {D}avid {L}ippa and {D}illon {N}iederhut and {D}avid {S}hupe},
	Keywords = {PMDA, MDAnalysis, Parallel algorithms, HPC, SPIDAL},
	Organization = {SciPy},
	Pages = {134 - 142},
	Title = {{PMDA} - {P}arallel {M}olecular {D}ynamics {A}nalysis},
	Year = 2019,
}

@article{Khoshlessan:2020,
	Abstract = {The performance of biomolecular molecular dynamics simulations has steadily increased on modern high-performance computing resources but acceleration of the analysis of the output trajectories has lagged behind so that analyzing simulations is becoming a bottleneck. To close this gap, we studied the performance of trajectory analysis with message passing interface (MPI) parallelization and the Python MDAnalysis library on three different Extreme Science and Engineering Discovery Environment (XSEDE) supercomputers where trajectories were read from a Lustre parallel file system. Strong scaling performance was impeded by stragglers, MPI processes that were slower than the typical process. Stragglers were less prevalent for compute-bound workloads, thus pointing to file reading as a bottleneck for scaling. However, a more complicated picture emerged in which both the computation and the data ingestion exhibited close to ideal strong scaling behavior whereas stragglers were primarily caused by either large MPI communication costs or long times to open the single shared trajectory file. We improved overall strong scaling performance by either subfiling (splitting the trajectory into separate files) or MPI-IO with parallel HDF5 trajectory files. The parallel HDF5 approach resulted in near ideal strong scaling on up to 384 cores (16 nodes), thus reducing trajectory analysis times by two orders of magnitude compared with the serial approach.},
	Author = {Khoshlessan, Mahzad and Paraskevakos, Ioannis and Fox, Geoffrey C. and Jha, Shantenu and Beckstein, Oliver},
	Date-Added = {2020-04-28 16:07:22 -0700},
	Date-Modified = {2020-09-07 11:43:05 -0700},
	Doi = {10.1002/cpe.5789},
	Journal = {Concurrency and Computation: Practice and Experience},
	Keywords = {big data, HDF5, HPC, MDAnalysis, molecular dynamics, MPI, MPI I/O, Python, straggler, trajectory analysis},
	Pages = {e5789},
	Title = {Parallel performance of molecular dynamics trajectory analysis},
	Volume = 32,
	Year = 2020,
}


@article{Buyl:2014,
	Abstract = {We propose a new file format named ``H5MD'' for storing molecular simulation data, such as trajectories of particle positions and velocities, along with thermodynamic observables that are monitored during the course of the simulation. H5MD files are HDF5 (Hierarchical Data Format) files with a specific hierarchy and naming scheme. Thus, H5MD inherits many benefits of HDF5, e.g., structured layout of multi-dimensional datasets, data compression, fast and parallel I/O, and portability across many programming languages and hardware platforms. H5MD files are self-contained, and foster the reproducibility of scientific data and the interchange of data between researchers using different simulation programs and analysis software. In addition, the H5MD specification can serve for other kinds of data (e.g. experimental data) and is extensible to supplemental data, or may be part of an enclosing file structure.},
	Author = {Pierre de Buyl and Peter H. Colberg and Felix H{\"o}fling},
	Date-Added = {2019-01-23 02:45:58 -0700},
	Date-Modified = {2019-01-23 02:45:58 -0700},
	Doi = {10.1016/j.cpc.2014.01.018},
	Issn = {0010-4655},
	Journal = {Computer Physics Communications},
	Keywords = {Molecular simulation, HDF5, H5MD, file format},
	Number = 6,
	Pages = {1546 - 1553},
	Title = {{H5MD}: A structured, efficient, and portable file format for molecular data},
	Volume = 185,
	Year = 2014,
}

@incollection{Collette:2014,
  author =        {Andrew Collette},
  booktitle =     {{Python} and {HDF5}},
  editor =        {Meghan Blanchette and Rachel Roumeliotis},
  publisher =     {O'Reilly Media, Inc., 1005 Gravenstein Highway North,
                   Sebastopol, CA 95472.},
  title =         {Python and HDF5},
  year =          2014,
}


@article{Harris:2020,
	Abstract = {Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves1 and in the first imaging of a black hole2. Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
	Author = {Harris, Charles R and Millman, K Jarrod and van der Walt, St{\'e}fan J and Gommers, Ralf and Virtanen, Pauli and Cournapeau, David and Wieser, Eric and Taylor, Julian and Berg, Sebastian and Smith, Nathaniel J and Kern, Robert and Picus, Matti and Hoyer, Stephan and van Kerkwijk, Marten H and Brett, Matthew and Haldane, Allan and Del R{\'\i}o, Jaime Fern{\'a}ndez and Wiebe, Mark and Peterson, Pearu and G{\'e}rard-Marchant, Pierre and Sheppard, Kevin and Reddy, Tyler and Weckesser, Warren and Abbasi, Hameer and Gohlke, Christoph and Oliphant, Travis E},
	Date-Added = {2021-05-31 12:20:24 -0700},
	Date-Modified = {2021-05-31 12:22:08 -0700},
	Doi = {10.1038/s41586-020-2649-2},
	Journal = {Nature},
	Journal-Full = {Nature},
	Keywords = {python, numpy},
	Mesh = {Computational Biology; Mathematics; Programming Languages; Software Design},
	Month = 09,
	Number = 7825,
	Pages = {357-362},
	Pmc = {PMC7759461},
	Pmid = 32939066,
	Pst = {ppublish},
	Title = {Array programming with NumPy},
	Volume = 585,
	Year = 2020,
}

@article{Virtanen:2020,
	Abstract = {SciPy is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, SciPy has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of SciPy 1.0 and highlight some recent technical developments.},
	Author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and van der Walt, St{\'e}fan J and Brett, Matthew and Wilson, Joshua and Millman, K Jarrod and Mayorov, Nikolay and Nelson, Andrew R J and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C J and Polat, {\.I}lhan and Feng, Yu and Moore, Eric W and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E A and Harris, Charles R and Archibald, Anne M and Ribeiro, Ant{\^o}nio H and Pedregosa, Fabian and van Mulbregt, Paul and {SciPy 1.0 Contributors}},
	Date-Added = {2021-05-31 12:21:21 -0700},
	Date-Modified = {2021-05-31 12:22:17 -0700},
	Doi = {10.1038/s41592-019-0686-2},
	Journal = {Nat Methods},
	Journal-Full = {Nature methods},
	Keywords = {python, numpy, scipy},
	Mesh = {Algorithms; Computational Biology; Computer Simulation; History, 20th Century; History, 21st Century; Linear Models; Models, Biological; Nonlinear Dynamics; Programming Languages; Signal Processing, Computer-Assisted; Software},
	Month = 03,
	Number = 3,
	Pages = {261-272},
	Pmc = {PMC7056644},
	Pmid = 32015543,
	Pst = {ppublish},
	Title = {SciPy 1.0: fundamental algorithms for scientific computing in Python},
	Volume = 17,
	Year = 2020,
}


@article{Cheatham:2015,
	Abstract = {The field of biomolecular simulation has matured to the level that detailed, accurate, and functionally relevant information that complements experimental data about the structure, dynamics, and interactions of biomolecules can now be routinely discovered. This has been enabled by access to large scale and heterogeneous high performance computing resources, including special purpose hardware. The improved performance of modern simulation methods coupled with hardware advances is shifting the rate-limiting steps of common biomolecular simulations of small- to moderately-sized systems from the generation of data (for example via production molecular dynamics simulations that used to take weeks or even months) to the pre- and post-processing phases of the workflow, namely simulation set-up and data processing, management, and analysis. Access to heterogeneous computational resources enables a broader exploration of biomolecular structure and dynamics by facilitating distinct aspects of typical biomolecular simulation workflows.},
	Author = {Cheatham, T. and Roe, D.},
	Date-Added = {2015-02-16 21:59:53 -0700},
	Date-Modified = {2015-09-13 21:51:08 -0700},
	Doi = {10.1109/MCSE.2015.7},
	Issn = {1521-9615},
	Journal = {Computing in Science Engineering},
	Keywords = {review; analysis; MD simulation; DNA; REMD; Analytical models;Biological system modeling;Chemistry;Computational modeling;Convergence;Educational institutions;Hardware},
	Number = 2,
	Pages = {30--39},
	Title = {The impact of heterogeneous computing on workflows for biomolecular simulation and analysis},
	Volume = 17,
	Year = 2015,
}

@incollection{Fox:2019,
	Abstract = {Our project is at the interface of Big Data and HPC -- High- Performance Big Data computing and this paper describes a collaboration between 7 collaborating Universities at Arizona State, Indiana (lead), Kansas, Rutgers, Stony Brook, Virginia Tech, and Utah. It addresses the intersection of High- performance and Big Data computing with several different application areas or communities driving the requirements for software systems and algorithms. We describe the base architecture, including the HPC-ABDS, High-Performance Computing enhanced Apache Big Data Stack, and an application use case study identifying key features that determine software and algorithm requirements. We summarize middleware including Harp-DAAL collective communication layer, Twister2 Big Data toolkit, and pilot jobs. Then we present the SPIDAL Scalable Parallel Interoperable Data Analytics Library and our work for it in core machine- learning, image processing and the application communities, Network science, Polar Science, Biomolecular Simulations, Pathology, and Spatial systems. We describe basic algorithms and their integration in end-to-end use cases.
},
	Annote = {ISBN print 978-1-61499-998-0},
	Author = {Geoffrey Fox and Judy Qiu and David Crandall and von Laszewski, Gregor and Oliver Beckstein and John Paden and Ioannis Paraskevakos and Shantenu Jha and Fusheng Wang and Madhav Marathe and Anil Vullikanti and Cheatham, Thomas E., {III}},
	Booktitle = {Future Trends of HPC in a Disruptive Scenario},
	Date-Added = {2019-12-01 10:16:42 -0700},
	Date-Modified = {2020-09-15 10:33:34 -0700},
	Doi = {10.3233/APC190005},
	Editor = {Grandinetti, L. and Joubert, G. R. and Michielsen, K. and Mirtaheri, S. L. and Taufer, M. and Yokota, R},
	Keywords = {SPIDAL, HPC, Big Data, Clouds, Graph Analytics, Polar Science, Pathology, Biomolecular simulations, Network Science, MIDAS},
	Pages = {34--81},
	Publisher = {IOS Press},
	Series = {Advances in Parallel Computing},
	Title = {Contributions to High-Performance Big Data Computing},
	Volume = 34,
	Year = 2019,
}


@inproceedings{Beckstein:2018,
	Author = {Beckstein, Oliver and Fox, Geoffrey and Jha, Shantenu},
	Booktitle = {Online {Resource} for {Big} {Data} and {Extreme}-{Scale} {Computing} {Workshop}},
	Date-Added = {2019-05-03 01:33:14 -0700},
	Date-Modified = {2019-05-03 01:34:25 -0700},
	File = {Beckstein et al. - Convergence of data generation and analysis in the.pdf:/Users/oliver/Zotero/storage/6DGA9NUX/Beckstein et al. - Convergence of data generation and analysis in the.pdf:application/pdf},
	Language = {en},
	Month = nov,
	Pages = 4,
	Title = {Convergence of data generation and analysis in the biomolecular simulation community},
	Url = {https://www.exascale.org/bdec/sites/www.exascale.org.bdec/files/whitepapers/Beckstein-Fox-Jha_BDEC2_WP_0.pdf},
	Year = 2018,
}


@article{Wickham:2011,
	Abstract = {Many data analysis problems involve the application of a split-apply-combine strategy, where you break up a big problem into manageable pieces, operate on each piece independently and then put all the pieces back together. This insight gives rise to a new R package that allows you to smoothly apply this strategy, without having to worry about the type of structure in which your data is stored.},
	Author = {Hadley Wickham},
	Date-Added = {2019-05-20 10:41:33 -0700},
	Date-Modified = {2020-04-17 13:20:13 -0700},
	Doi = {10.18637/jss.v040.i01},
	Journal = {Journal of Statistical Software},
	Keywords = {R, parallel analysis framework},
	Number = 1,
	Pages = {1--29},
	Title = {The Split-Apply-Combine Strategy for Data Analysis},
	Volume = 40,
	Year = 2011,
}


@article{Theobald:2005vn,
	Abstract = {A common measure of conformational similarity in structural bioinformatics is the minimum root mean square deviation (RMSD) between the coordinates of two macromolecules. In many applications, the rotations relating the structures are not needed. Several common algorithms for calculating RMSDs require the computationally costly procedures of determining either the eigen decomposition or matrix inversion of a 3x3 or 4x4 matrix. Using a quaternion-based method, here a simple algorithm is developed that rapidly and stably determines RMSDs by circumventing the decomposition and inversion problems.},
	Author = {Theobald, Douglas L},
	Date-Added = {2012-11-16 14:27:26 -0700},
	Date-Modified = {2019-05-22 02:23:15 -0700},
	Doi = {10.1107/S0108767305015266},
	Journal = {Acta Crystallogr A},
	Journal-Full = {Acta crystallographica. Section A, Foundations of crystallography},
	Keywords = {qcprot, ALGORITHM},
	Month = {Jul},
	Number = {Pt 4},
	Pages = {478-80},
	Pmid = 15973002,
	Pst = {ppublish},
	Title = {Rapid calculation of {RMSDs} using a quaternion-based characteristic polynomial},
	Volume = 61,
	Year = 2005,
}

@article{Liu:2010kx,
	Abstract = {Finding the rotational matrix that minimizes the sum of squared deviations between two vectors is an important problem in bioinformatics and crystallography. Traditional algorithms involve the inversion or decomposition of a 3 x 3 or 4 x 4 matrix, which can be computationally expensive and numerically unstable in certain cases. Here, we present a simple and robust algorithm to rapidly determine the optimal rotation using a Newton-Raphson quaternion-based method and an adjoint matrix. Our method is at least an order of magnitude more efficient than conventional inversion/decomposition methods, and it should be particularly useful for high-throughput analyses of molecular conformations.},
	Author = {Liu, Pu and Agrafiotis, Dimitris K and Theobald, Douglas L},
	Date-Added = {2012-11-16 14:27:26 -0700},
	Date-Modified = {2019-05-22 02:23:29 -0700},
	Doi = {10.1002/jcc.21439},
	Journal = {J Comput Chem},
	Journal-Full = {Journal of computational chemistry},
	Mesh = {qcprot; ALGORITHM; Algorithms; Computational Biology; Crystallography; High-Throughput Screening Assays; Protein Conformation; Proteins; Rotation; Time Factors},
	Month = {May},
	Number = 7,
	Pages = {1561-3},
	Pmc = {PMC2958452},
	Pmid = 20017124,
	Pst = {ppublish},
	Title = {Fast determination of the optimal rotational matrix for macromolecular superpositions},
	Volume = 31,
	Year = 2010,
}


@article{Huggins:2019,
	Abstract = {Biomolecular simulation is increasingly central to understanding and designing biological molecules and their interactions. Detailed, physics-based simulation methods are demonstrating rapidly growing impact in areas as diverse as biocatalysis, drug delivery, biomaterials, biotechnology, and drug design. Simulations offer the potential of uniquely detailed, atomic-level insight into mechanisms, dynamics, and processes, as well as increasingly accurate predictions of molecular properties. Simulations can now be used as computational assays of biological activity, for example, in predictions of drug resistance. Methodological and algorithmic developments, combined with advances in computational hardware, are transforming the scope and range of calculations. Different types of methods are required for different types of problem. Accurate methods and extensive simulations promise quantitative comparison with experiments across biochemistry. Atomistic simulations can now access experimentally relevant timescales for large systems, leading to a fertile interplay of experiment and theory and offering unprecedented opportunities for validating and developing models. Coarse-grained methods allow studies on larger length- and timescales, and theoretical developments are bringing electronic structure calculations into new regimes. Multiscale methods are another key focus for development, combining different levels of theory to increase accuracy, aiming to connect chemical and molecular changes to macroscopic observables. In this review, we outline biomolecular simulation methods and highlight examples of its application to investigate questions in biology. This article is categorized under: Molecular and Statistical Mechanics > Molecular Dynamics and Monte-Carlo Methods Structure and Mechanism > Computational Biochemistry and Biophysics Molecular and Statistical Mechanics > Free Energy Methods},
	Author = {Huggins, David J. and Biggin, Philip C. and D{\"a}mgen, Marc A. and Essex, Jonathan W. and Harris, Sarah A. and Henchman, Richard H. and Khalid, Syma and Kuzmanic, Antonija and Laughton, Charles A. and Michel, Julien and Mulholland, Adrian J. and Rosta, Edina and Sansom, Mark S. P. and van der Kamp, Marc W.},
	Date-Added = {2019-05-20 13:40:46 -0700},
	Date-Modified = {2019-05-20 13:40:46 -0700},
	Doi = {10.1002/wcms.1393},
	Journal = {Wiley Interdisciplinary Reviews: Computational Molecular Science},
	Keywords = {review, MD SIMULATION, MOLECULAR DYNAMICS, enzyme, membrane, molecular dynamics, multiscale, protein, QM/MM},
	Number = 3,
	Pages = {e1393},
	Title = {Biomolecular simulations: From dynamics and mechanisms to computational assays of biological activity},
	Volume = 9,
	Year = 2019,
}


@article{xsede,
	Author = {J. Towns and T. Cockerill and M. Dahan and I. Foster and K. Gaither and A. Grimshaw and V. Hazlewood and S. Lathrop and D. Lifka and G. D. Peterson and R. Roskies and J. R. Scott and N. Wilkins-Diehr},
	Date-Added = {2019-05-10 13:53:32 -0700},
	Date-Modified = {2019-05-10 13:53:51 -0700},
	Doi = {10.1109/MCSE.2014.80},
	Issn = {1521-9615},
	Journal = {Computing in Science \& Engineering},
	Keywords = {Knowledge discovery;Scientific computing;Digital systems;Materials engineering;Supercomputers},
	Month = {Sept.-Oct.},
	Number = 5,
	Pages = {62-74},
	Title = {{XSEDE}: Accelerating Scientific Discovery},
	Volume = 16,
	Year = 2014,
}


@article{Mura:2014,
	Abstract = { The biomolecules in and around a living cell -- proteins, nucleic acids, lipids and carbohydrates -- continuously sample myriad conformational states that are thermally accessible at physiological temperatures. Simultaneously, a given biomolecule also samples (and is sampled by) a rapidly fluctuating local environment comprising other biopolymers, small molecules, water, ions, etc. that diffuse to within a few nanometres, leading to inter-molecular contacts that stitch together large supramolecular assemblies. Indeed, all biological systems can be viewed as dynamic networks of molecular interactions. As a complement to experimentation, molecular simulation offers a uniquely powerful approach to analyse biomolecular structure, mechanism and dynamics; this is possible because the molecular contacts that define a complicated biomolecular system are governed by the same physical principles (forces and energetics) that characterise individual small molecules, and these simpler systems are relatively well-understood. With modern algorithms and computing capabilities, simulations are now an indispensable tool for examining biomolecular assemblies in atomic detail, from the conformational motion in an individual protein to the diffusional dynamics and inter-molecular collisions in the early stages of formation of cellular-scale assemblies such as the ribosome. This text introduces the physicochemical foundations of molecular simulations and docking, largely from the perspective of biomolecular interactions. },
	Author = {Mura, Cameron and McAnany, Charles E.},
	Date-Added = {2014-08-15 09:54:07 -0700},
	Date-Modified = {2014-08-15 09:54:07 -0700},
	Doi = {10.1080/08927022.2014.935372},
	Journal = {Molecular Simulation},
	Keywords = {review, MD simulation, introduction, docking, STATISTICAL MECHANICS, RARE EVENTS, MONTE CARLO},
	Number = {10-11},
	Pages = {732-764},
	Title = {An introduction to biomolecular simulations and docking},
	Volume = 40,
	Year = 2014,
}


@article{Braun:2018,
	Abstract = {This document provides a starting point for approaching molecular simulations, guiding beginning practitioners to what issues they need to know about before and while starting their first simulations, and why those issues are so critical. This document makes no claims to provide an adequate introduction to the subject on its own. Instead, our goal is to help people know what issues are critical before beginning, and to provide references to good resources on those topics. We also provide a checklist of key issues to consider before and while setting up molecular simulations which may serve as a foundation for other best practices documents.},
	Author = {Braun, Efrem and Gilmer, Justin and Mayes, Heather B. and Mobley, David L. and Monroe, Jacob I. and Prasad, Samarjeet and Zuckerman, Daniel M.},
	Date = {2018-11-30},
	Date-Added = {2019-02-11 13:33:50 -0700},
	Date-Modified = {2019-02-11 13:34:01 -0700},
	Day = 30,
	Doi = {10.33011/livecoms.1.1.5957},
	Journal = {Living Journal of Computational Molecular Science},
	Keywords = {review, molecular dynamics, MD},
	Month = 11,
	Number = 1,
	Pages = {5957--},
	Publisher = {University of Colorado Boulder},
	Title = {Best Practices for Foundations in Molecular Simulations [Article v1.0]},
	Volume = 1,
	Year = 2018,
}


@article{Dalcin:2011,
	Abstract = {This work presents two software components aimed to relieve the costs of accessing high-performance parallel computing resources within a Python programming environment: MPI for Python and PETSc for Python. MPI for Python is a general-purpose Python package that provides bindings for the Message Passing Interface (MPI) standard using any back-end MPI implementation. Its facilities allow parallel Python programs to easily exploit multiple processors using the message passing paradigm. PETSc for Python provides access to the Portable, Extensible Toolkit for Scientific Computation (PETSc) libraries. Its facilities allow sequential and parallel Python applications to exploit state of the art algorithms and data structures readily available in PETSc for the solution of large-scale problems in science and engineering. MPI for Python and PETSc for Python are fully integrated to PETSc-FEM, an MPI and PETSc based parallel, multiphysics, finite elements code developed at CIMEC laboratory. This software infrastructure supports research activities related to simulation of fluid flows with applications ranging from the design of microfluidic devices for biochemical analysis to modeling of large-scale stream/aquifer interactions.},
	Author = {Dalc{\'\i}n, Lisandro D. and Paz, Rodrigo R. and Kler, Pablo A. and Cosimo, Alejandro},
	Date-Added = {2017-06-10 22:40:02 +0000},
	Date-Modified = {2017-10-27 07:37:08 +0000},
	Doi = {10.1016/j.advwatres.2011.04.013},
	Issn = {0309-1708},
	Journal = {Advances in Water Resources},
	Keywords = {PETSc, MPI4py, python, parallel},
	Note = {New Computational Methods and Software Tools},
	Number = 9,
	Pages = {1124 - 1139},
	Title = {Parallel distributed computing using Python},
	Volume = 34,
	Year = 2011,
}


@inproceedings{Paraskevakos:2018,
	Abstract = {Different frameworks for implementing parallel data analytics applications have been proposed by the HPC and Big Data communities. In this paper, we investigate three frame- works: Spark, Dask and RADICAL-Pilot with respect to their ability to support data analytics requirements on HPC resources. We investigate the data analysis requirements of Molecular Dy- namics (MD) simulations which are significant consumers of su- percomputing cycles, producing immense amounts of data: a typ- ical large-scale MD simulation of physical systems of O(100,000) atoms can produce from O(10) GB to O(1000) GBs of data. We propose and evaluate different approaches for parallelization of a representative set of MD trajectory analysis algorithms, in partic- ular the computation of path similarity and the identification of connected atom. We evaluate Spark, Dask and RADICAL-Pilot with respect to the provided abstractions and runtime engine ca- pabilities to support these algorithms. We provide a conceptual basis for comparing and understanding the different frameworks that enable users to select the optimal system for its application. Further, we provide a quantitative performance analysis of the different algorithms across the three frameworks using different high-performance computing resources.},
	Address = {New York, NY, USA},
	Author = {Ioannis Paraskevakos and Andre Luckow and Mahzad Khoshlessan and Goerge Chantzialexiou and Thomas E. Cheatham and Oliver Beckstein and Geoffrey Fox and Shantenu Jha},
	Booktitle = {ICPP 2018: 47th International Conference on Parallel Processing, August 13--16, 2018, Eugene, OR, USA},
	Date-Added = {2017-11-29 01:31:19 +0000},
	Date-Modified = {2019-02-15 11:18:51 -0700},
	Doi = {10.1145/3225058.3225128},
	Keywords = {Data analytics, MD Simulations Analysis, Parallel , MDAnalysis, task-parallel, PSA, LeafletFinder},
	Month = {August 13--16},
	Organization = {Association for Computing Machinery},
	Pages = {Article No. 49},
	Publisher = {ACM},
	Title = {Task-parallel Analysis of Molecular Dynamics Trajectories},
	Year = 2018,
}


@article{Dror:2012cr,
	Author = {Dror, Ron O and Dirks, Robert M and Grossman, J P and Xu, Huafeng and Shaw, David E},
	Date-Added = {2016-07-05 05:56:48 +0000},
	Date-Modified = {2016-07-05 05:56:48 +0000},
	Doi = {10.1146/annurev-biophys-042910-155245},
	Journal = {Annu Rev Biophys},
	Journal-Full = {Annual review of biophysics},
	Keywords = {Anton, DESRES, review},
	Mesh = {Animals; Biological Transport; Cell Membrane; Humans; Models, Molecular; Molecular Biology; Molecular Dynamics Simulation; Protein Conformation; Protein Folding; Proteins},
	Pages = {429-52},
	Pmid = {22577825},
	Pst = {ppublish},
	Title = {Biomolecular simulation: a computational microscope for molecular biology},
	Volume = {41},
	Year = {2012},
	Abstract = {Molecular dynamics simulations capture the behavior of biological macromolecules in full atomic detail, but their computational demands, combined with the challenge of appropriately modeling the relevant physics, have historically restricted their length and accuracy. Dramatic recent improvements in achievable simulation speed and the underlying physical models have enabled atomic-level simulations on timescales as long as milliseconds that capture key biochemical processes such as protein folding, drug binding, membrane transport, and the conformational changes critical to protein function. Such simulation may serve as a computational microscope, revealing biomolecular mechanisms at spatial and temporal scales that are difficult to observe experimentally. We describe the rapidly evolving state of the art for atomic-level biomolecular simulation, illustrate the types of biological discoveries that can now be made through simulation, and discuss challenges motivating continued innovation in this field.},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QVy4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svQW5udSBSZXYgQmlvcGh5c180MV9Ecm9yXzIwMTJhLnBkZtIXCxgZV05TLmRhdGFPEQHqAAAAAAHqAAIAAAREYXRhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTJAwMSCsAAAAWMkAfQW5udSBSZXYgQmlvcGh5c180MV8jMTYzQUZGLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABY6/9D3C7MAAAAAAAAAAAAGAAUAAAkAAAAAAAAAAAAAAAAAAAAAB0JpYkRlc2sAABAACAAA0yRufAAAABEACAAA0PduIwAAAAEAFAAWMkAAFjI+ABYvWAAVPgwAABnhAAIAU0RhdGE6b2xpdmVyOgBEb2N1bWVudHM6AFB1YmxpY2F0aW9uczoAcGRmOgBCaWJEZXNrOgBBbm51IFJldiBCaW9waHlzXzQxXyMxNjNBRkYucGRmAAAOAEYAIgBBAG4AbgB1ACAAUgBlAHYAIABCAGkAbwBwAGgAeQBzAF8ANAAxAF8ARAByAG8AcgBfADIAMAAxADIAYQAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBNL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL0FubnUgUmV2IEJpb3BoeXNfNDFfRHJvcl8yMDEyYS5wZGYAABMADS9Wb2x1bWVzL0RhdGEA//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A6ADtAPUC4wLlAuoC9QL+AwwDEAMXAyADJQMyAzUDRwNKA08AAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAADUQ==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1146/annurev-biophys-042910-155245}}


@article{Orozco:2014dq,
	Author = {Orozco, Modesto},
	Date-Added = {2016-07-05 05:54:58 +0000},
	Date-Modified = {2016-07-05 06:06:31 +0000},
	Doi = {10.1039/C3CS60474H},
	Issue = {14},
	Journal = {Chem. Soc. Rev.},
	Keywords = {review, MD simulation},
	Pages = {5051-5066},
	Publisher = {The Royal Society of Chemistry},
	Rating = {4},
	Title = {A theoretical view of protein dynamics},
	Volume = {43},
	Year = {2014},
	Abstract = {Proteins are fascinating supramolecular structures{,} which are able to recognize ligands transforming binding information into chemical signals. They can transfer information across the cell{,} can catalyse complex chemical reactions{,} and are able to transform energy into work with much more efficiency than any human engine. The unique abilities of proteins are tightly coupled with their dynamic properties{,} which are coded in a complex way in the sequence and carefully refined by evolution. Despite its importance{,} our experimental knowledge of protein dynamics is still rather limited{,} and mostly derived from theoretical calculations. I will review here{,} in a systematic way{,} the current state-of-the-art theoretical approaches to the study of protein dynamics{,} emphasizing the most recent advances{,} examples of use and the expected lines of development in the near future.},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QWC4uLy4uLy4uLy4uLy4uLy4uL0RvY3VtZW50cy9QdWJsaWNhdGlvbnMvcGRmL0JpYkRlc2svQ2hlbS4gU29jLiBSZXYuXzQzX09yb3pjb18yMDE0YS5wZGbSFwsYGVdOUy5kYXRhTxEB7AAAAAAB7AACAAAERGF0YQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0yQMDEgrAAAAFjJAH0NoZW0uIFNvYy4gUmV2Ll80M19PIzE2NDY1Qi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWRlvQ9wocAAAAAAAAAAAABgAFAAAJAAAAAAAAAAAAAAAAAAAAAAdCaWJEZXNrAAAQAAgAANMkbnwAAAARAAgAAND3bIwAAAABABQAFjJAABYyPgAWL1gAFT4MAAAZ4QACAFNEYXRhOm9saXZlcjoARG9jdW1lbnRzOgBQdWJsaWNhdGlvbnM6AHBkZjoAQmliRGVzazoAQ2hlbS4gU29jLiBSZXYuXzQzX08jMTY0NjVCLnBkZgAADgBIACMAQwBoAGUAbQAuACAAUwBvAGMALgAgAFIAZQB2AC4AXwA0ADMAXwBPAHIAbwB6AGMAbwBfADIAMAAxADQAYQAuAHAAZABmAA8ACgAEAEQAYQB0AGEAEgBOL29saXZlci9Eb2N1bWVudHMvUHVibGljYXRpb25zL3BkZi9CaWJEZXNrL0NoZW0uIFNvYy4gUmV2Ll80M19Pcm96Y29fMjAxNGEucGRmABMADS9Wb2x1bWVzL0RhdGEA//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A6QDuAPYC5gLoAu0C+AMBAw8DEwMaAyMDKAM1AzgDSgNNA1IAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAADVA==},
	Bdsk-Url-1 = {http://dx.doi.org/10.1039/C3CS60474H}}


@article{howison_tuning_2010,
	title = {Tuning {HDF5} for {Lustre} {File} {Systems}},
	url = {https://escholarship.org/uc/item/46r9d86r},
	abstract = {HDF5 is a cross-platform parallel I/O library that is used by a wide variety of HPC applications for the flexibility of its hierarchical object-database representation of scientific data. We describe our recent work to optimize the performance of the HDF5 and MPI-IO libraries for the Lustre parallel file system. We selected three different HPC applications to represent the diverse range of I/O requirements, and measured their performance on three different systems to demonstrate the robustness of our optimizations across different file system configurations and to validate our optimization strategy. We demonstrate that the combined optimizations improve HDF5 parallel I/O performance by up to 33 times in some cases running close to the achievable peak performance of the underlying file system and demonstrate scalable performance up to 40,960-way concurrency.},
	language = {en},
	urldate = {2021-02-15},
	author = {Howison, Mark},
	month = sep,
	year = {2010}}


@article{lopez-redondo_zinc_2021,
	title = {Zinc binding alters the conformational dynamics and drives the transport cycle of the cation diffusion facilitator {YiiP}},
	volume = {153},
	issn = {0022-1295},
	url = {https://doi.org/10.1085/jgp.202112873},
	doi = {10.1085/jgp.202112873},
	abstract = {YiiP is a secondary transporter that couples Zn2+ transport to the proton motive force. Structural studies of YiiP from prokaryotes and Znt8 from humans have revealed three different Zn2+ sites and a conserved homodimeric architecture. These structures define the inward-facing and outward-facing states that characterize the archetypal alternating access mechanism of transport. To study the effects of Zn2+ binding on the conformational transition, we use cryo-EM together with molecular dynamics simulation to compare structures of YiiP from Shewanella oneidensis in the presence and absence of Zn2+. To enable single-particle cryo-EM, we used a phage-display library to develop a Fab antibody fragment with high affinity for YiiP, thus producing a YiiP/Fab complex. To perform MD simulations, we developed a nonbonded dummy model for Zn2+ and validated its performance with known Zn2+-binding proteins. Using these tools, we find that, in the presence of Zn2+, YiiP adopts an inward-facing conformation consistent with that previously seen in tubular crystals. After removal of Zn2+ with high-affinity chelators, YiiP exhibits enhanced flexibility and adopts a novel conformation that appears to be intermediate between inward-facing and outward-facing states. This conformation involves closure of a hydrophobic gate that has been postulated to control access to the primary transport site. Comparison of several independent cryo-EM maps suggests that the transition from the inward-facing state is controlled by occupancy of a secondary Zn2+ site at the cytoplasmic membrane interface. This work enhances our understanding of individual Zn2+ binding sites and their role in the conformational dynamics that govern the transport cycle.},
	number = {8},
	urldate = {2021-07-23},
	journal = {Journal of General Physiology},
	author = {Lopez-Redondo, Maria and Fan, Shujie and Koide, Akiko and Koide, Shohei and Beckstein, Oliver and Stokes, David L.},
	month = jul,
	year = {2021}}


@article{casalino_ai-driven_2021,
	title = {{AI}-driven multiscale simulations illuminate mechanisms of {SARS}-{CoV}-2 spike dynamics},
	issn = {1094-3420},
	url = {https://doi.org/10.1177/10943420211006452},
	doi = {10.1177/10943420211006452},
	abstract = {We develop a generalizable AI-driven workflow that leverages heterogeneous HPC resources to explore the time-dependent dynamics of molecular systems. We use this workflow to investigate the mechanisms of infectivity of the SARS-CoV-2 spike protein, the main viral infection machinery. Our workflow enables more efficient investigation of spike dynamics in a variety of complex environments, including within a complete SARS-CoV-2 viral envelope simulation, which contains 305 million atoms and shows strong scaling on ORNL Summit using NAMD. We present several novel scientific discoveries, including the elucidation of the spike?s full glycan shield, the role of spike glycans in modulating the infectivity of the virus, and the characterization of the flexible interactions between the spike and the human ACE2 receptor. We also demonstrate how AI can accelerate conformational sampling across different systems and pave the way for the future application of such methods to additional studies in SARS-CoV-2 and other molecular systems.},
	urldate = {2021-07-23},
	journal = {The International Journal of High Performance Computing Applications},
	author = {Casalino, Lorenzo and Dommer, Abigail C and Gaieb, Zied and Barros, Emilia P and Sztain, Terra and Ahn, Surl-Hee and Trifan, Anda and Brace, Alexander and Bogetti, Anthony T and Clyde, Austin and Ma, Heng and Lee, Hyungro and Turilli, Matteo and Khalid, Syma and Chong, Lillian T and Simmerling, Carlos and Hardy, David J and Maia, Julio DC and Phillips, James C and Kurth, Thorsten and Stern, Abraham C and Huang, Lei and McCalpin, John D and Tatineni, Mahidhar and Gibbs, Tom and Stone, John E and Jha, Shantenu and Ramanathan, Arvind and Amaro, Rommie E},
	month = apr,
	year = {2021},
	note = {Publisher: SAGE Publications Ltd STM},
	pages = {10943420211006452}}

