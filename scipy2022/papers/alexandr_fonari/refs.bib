@generic{Schr,
   author = {Schrödinger LLC},
   title = {Schrödinger Release 2022-2: Materials Science Suite},
   url = {https://www.schrodinger.com/platform/materials-science},
   year = {2022},
}
@article{Kwak,
   abstract = {In recent years, generative machine learning approaches have attracted significant attention as an enabling approach for designing novel molecular materials with minimal design bias and thereby realizing more directed design for a specific materials property space. Further, data-driven approaches have emerged as a new tool to accelerate the development of novel organic electronic materials for organic light-emitting diode (OLED) applications. We demonstrate and validate a goal-directed generative machine learning framework based on a recurrent neural network (RNN) deep reinforcement learning approach for the design of hole transporting OLED materials. These large-scale molecular simulations also demonstrate a rapid, cost-effective method to identify new materials in OLEDs while also enabling expansion into many other verticals such as catalyst design, aerospace, life science, and petrochemicals.},
   author = {H. Shaun Kwak and Yuling An and David J. Giesen and Thomas F. Hughes and Christopher T. Brown and Karl Leswing and Hadi Abroshan and Mathew D. Halls},
   doi = {10.3389/fchem.2021.800370},
   issn = {22962646},
   journal = {Frontiers in Chemistry},
   title = {Design of Organic Electronic Materials With a Goal-Directed Generative Model Powered by Deep Neural Networks and High-Throughput Molecular Simulations},
   volume = {9},
   year = {2022},
}
@article{Abroshan,
   abstract = {Data-driven methods are receiving increasing attention to accelerate materials design and discovery for organic light-emitting diodes (OLEDs). Machine learning (ML) has enabled high-throughput screening of materials properties to suggest new candidates for organic electronics. However, building reliable predictive ML models requires creating and managing a high volume of data that adequately address the complexity of materials’ chemical space. In this regard, active learning (AL) has emerged as a powerful strategy to efficiently navigate the search space by prioritizing the decision-making process for unexplored data. This approach allows a more systematic mechanism to identify promising candidates by minimizing the number of computations required to explore an extensive materials library with diverse variables and parameters. In this paper, we applied a workflow of AL that accounts for multiple optoelectronic parameters to identify materials candidates for hole-transport layers (HTL) in OLEDs. Results of this work pave the way for efficient screening of materials for organic electronics with superior efficiencies before laborious simulations, synthesis, and device fabrication.},
   author = {Hadi Abroshan and H. Shaun Kwak and Yuling An and Christopher Brown and Anand Chandrasekaran and Paul Winget and Mathew D. Halls},
   doi = {10.3389/fchem.2021.800371},
   issn = {22962646},
   journal = {Frontiers in Chemistry},
   title = {Active Learning Accelerates Design and Optimization of Hole-Transporting Materials for Organic Electronics},
   volume = {9},
   year = {2022},
}
@article{Marcus,
   author = {Rudolph A. Marcus},
   doi = {10.1103/RevModPhys.65.599},
   issn = {00346861},
   issue = {3},
   journal = {Reviews of Modern Physics},
   title = {Electron transfer reactions in chemistry. Theory and experiment},
   volume = {65},
   year = {1993},
}
@article{Schleder,
   abstract = {Recent advances in experimental and computational methods are increasing the quantity and complexity of generated data. This massive amount of raw data needs to be stored and interpreted in order to advance the materials science field. Identifying correlations and patterns from large amounts of complex data is being performed by machine learning algorithms for decades. Recently, the materials science community started to invest in these methodologies to extract knowledge and insights from the accumulated data. This review follows a logical sequence starting from density functional theory as the representative instance of electronic structure methods, to the subsequent high-throughput approach, used to generate large amounts of data. Ultimately, data-driven strategies which include data mining, screening, and machine learning techniques, employ the data generated. We show how these approaches to modern computational materials science are being used to uncover complexities and design novel materials with enhanced properties. Finally, we point to the present research problems, challenges, and potential future perspectives of this new exciting field.},
   author = {Gabriel R. Schleder and Antonio C.M. Padilha and Carlos Mera Acosta and Marcio Costa and Adalberto Fazzio},
   doi = {10.1088/2515-7639/ab084b},
   issn = {25157639},
   issue = {3},
   journal = {JPhys Materials},
   title = {From DFT to machine learning: Recent approaches to materials science - A review},
   volume = {2},
   year = {2019},
}
@article{Vasudevan,
   author = {Rama Vasudevan and Ghanshyam Pilania and Prasanna V. Balachandran},
   doi = {10.1063/5.0043300},
   issn = {10897550},
   issue = {7},
   journal = {Journal of Applied Physics},
   title = {Machine learning for materials design and discovery},
   volume = {129},
   year = {2021},
}
@web_page{RDKitC,
   title = {RDKit contributors},
   url = {https://github.com/rdkit/rdkit/graphs/contributors},
}
@article{Chandrasekaran,
   author = {A. Chandrasekaran},
   journal = {in progress},
   title = {Active Learning Accelerated Design of Ionic Materials},
}
@article{SkLearn,
   abstract = {Scikit-learn is a Python module integrating a wide range of state-of-the-art machine learning algorithms for medium-scale supervised and unsupervised problems. This package focuses on bringing machine learning to non-specialists using a general-purpose high-level language. Emphasis is put on ease of use, performance, documentation, and API consistency. It has minimal dependencies and is distributed under the simplified BSD license, encouraging its use in both academic and commercial settings. Source code, binaries, and documentation can be downloaded from http://scikit-learn.sourceforge.net.},
   author = {Fabian Pedregosa and Gael Varoquaux and Alexandre Gramfort and Vincent Michel and Bertrand Thirion and Olivier Grisel and Mathieu Blondel and Peter Prettenhofer and Ron Weiss and Vincent Dubourg and Jake Vanderplas and Alexandre Passos and David Cournapeau and Matthieu Brucher and Matthieu Perrot and Édouard Duchesnay},
   issn = {15324435},
   journal = {Journal of Machine Learning Research},
   title = {Scikit-learn: Machine learning in Python},
   volume = {12},
   url = {https://scikit-learn.org/},
   year = {2011},
}
@article{DScribe,
   abstract = {DScribe is a software package for machine learning that provides popular feature transformations (“descriptors”) for atomistic materials simulations. DScribe accelerates the application of machine learning for atomistic property prediction by providing user-friendly, off-the-shelf descriptor implementations. The package currently contains implementations for Coulomb matrix, Ewald sum matrix, sine matrix, Many-body Tensor Representation (MBTR), Atom-centered Symmetry Function (ACSF) and Smooth Overlap of Atomic Positions (SOAP). Usage of the package is illustrated for two different applications: formation energy prediction for solids and ionic charge prediction for atoms in organic molecules. The package is freely available under the open-source Apache License 2.0. Program summary: Program Title: DScribe Program Files doi: http://dx.doi.org/10.17632/vzrs8n8pk6.1 Licensing provisions: Apache-2.0 Programming language: Python/C/C++ Supplementary material: Supplementary Information as PDF Nature of problem: The application of machine learning for materials science is hindered by the lack of consistent software implementations for feature transformations. These feature transformations, also called descriptors, are a key step in building machine learning models for property prediction in materials science. Solution method: We have developed a library for creating common descriptors used in machine learning applied to materials science. We provide an implementation the following descriptors: Coulomb matrix, Ewald sum matrix, sine matrix, Many-body Tensor Representation (MBTR), Atom-centered Symmetry Functions (ACSF) and Smooth Overlap of Atomic Positions (SOAP). The library has a python interface with computationally intensive routines written in C or C++. The source code, tutorials and documentation are provided online. A continuous integration mechanism is set up to automatically run a series of regression tests and check code coverage when the codebase is updated.},
   author = {Lauri Himanen and Marc O.J. Jager and Eiaki V. Morooka and Filippo Federici Canova and Yashasvi S. Ranawat and David Z. Gao and Patrick Rinke and Adam S. Foster},
   doi = {10.1016/j.cpc.2019.106949},
   issn = {00104655},
   journal = {Computer Physics Communications},
   title = {DScribe: Library of descriptors for machine learning in materials science},
   volume = {247},
   url = {https://singroup.github.io/dscribe/latest/},
   year = {2020},
}
@article{Sendek,
   author = {Austin D Sendek and Qian Yang and Ekin D Cubuk and Karel-Alexander N Duerloo and Yi Cui and Evan J Reed},
   doi = {10.1039/c6ee02697d},
   issue = {1},
   journal = {Energy and Environmental Science},
   pages = {306-320},
   publisher = {Royal Society of Chemistry},
   title = {Holistic computational structure screening of more than 12000 candidates for solid lithium-ion conductor materials},
   volume = {10},
   year = {2017},
}
@article{Matminer,
   abstract = {As materials data sets grow in size and scope, the role of data mining and statistical learning methods to analyze these materials data sets and build predictive models is becoming more important. This manuscript introduces matminer, an open-source, Python-based software platform to facilitate data-driven methods of analyzing and predicting materials properties. Matminer provides modules for retrieving large data sets from external databases such as the Materials Project, Citrination, Materials Data Facility, and Materials Platform for Data Science. It also provides implementations for an extensive library of feature extraction routines developed by the materials community, with 47 featurization classes that can generate thousands of individual descriptors and combine them into mathematical functions. Finally, matminer provides a visualization module for producing interactive, shareable plots. These functions are designed in a way that integrates closely with machine learning and data analysis packages already developed and in use by the Python data science community. We explain the structure and logic of matminer, provide a description of its various modules, and showcase several examples of how matminer can be used to collect data, reproduce data mining studies reported in the literature, and test new methodologies.},
   author = {Logan Ward and Alexander Dunn and Alireza Faghaninia and Nils E.R. Zimmermann and Saurabh Bajaj and Qi Wang and Joseph Montoya and Jiming Chen and Kyle Bystrom and Maxwell Dylla and Kyle Chard and Mark Asta and Kristin A. Persson and G. Jeffrey Snyder and Ian Foster and Anubhav Jain},
   doi = {10.1016/j.commatsci.2018.05.018},
   issn = {09270256},
   journal = {Computational Materials Science},
   title = {Matminer: An open source toolkit for materials data mining},
   volume = {152},
   url = {https://hackingmaterials.lbl.gov/matminer/},
   year = {2018},
}
@article{AutoQSAR,
   abstract = {Aim: We introduce AutoQSAR, an automated machine-learning application to build, validate and deploy quantitative structure-activity relationship (QSAR) models. Methodology/results: The process of descriptor generation, feature selection and the creation of a large number of QSAR models has been automated into a single workflow within AutoQSAR. The models are built using a variety of machine-learning methods, and each model is scored using a novel approach. Effectiveness of the method is demonstrated through comparison with literature QSAR models using identical datasets for six end points: protein-ligand binding affinity, solubility, blood-brain barrier permeability, carcinogenicity, mutagenicity and bioaccumulation in fish. Conclusion: AutoQSAR demonstrates similar or better predictive performance as compared with published results for four of the six endpoints while requiring minimal human time and expertise.},
   author = {Steven L. Dixon and Jianxin Duan and Ethan Smith and Christopher D. Von Bargen and Woody Sherman and Matthew P. Repasky},
   doi = {10.4155/fmc-2016-0093},
   issn = {17568927},
   issue = {15},
   journal = {Future Medicinal Chemistry},
   title = {AutoQSAR: An automated machine learning tool for best-practice quantitative structure-activity relationship modeling},
   volume = {8},
   year = {2016},
}
@book{DeepChem,
   author = {Bharath Ramsundar and Peter Eastman and Patrick Walters and Vijay Pande and Karl Leswing and Zhenqin Wu},
   note = {https://www.amazon.com/Deep-Learning-Life-Sciences-Microscopy/dp/1492039837},
   publisher = {O'Reilly Media},
   title = {Deep Learning for the Life Sciences},
   year = {2019},
}
@article{Powder,
   abstract = {Powder diffraction is a non-destructive technique, which is experimentally simple in principle. Because the physics behind diffraction is well understood, an exceptionally large amount of information can be obtained from a single measurement. The positions and relative intensities of the peaks yield a fingerprint that can be used for qualitative phase analysis. Quantitative phase analysis can be obtained by detailed analysis of the intensities. Unit cells can be derived from the peak positions. Crystal structures can be solved using powder diffraction data and refined by the Rietveld method. The peak profiles contain information about crystallite size, strain and nanostructure. Non-idealities in the intensities give information on texture. Abandoning the crystallographic model provides information about local structure, by pair distribution function analysis. For powder diffraction, everything is a sample; the technique is commonly applied to characterize minerals, ceramics, metals and alloys, catalysts, polymers, pharmaceuticals, organic compounds, environmental and forensic samples, among others. The major features of contemporary laboratory powder diffractometers are described. Methods for obtaining suitable powder specimens are summarized. Major applications of qualitative and quantitative phase analysis, structure solution, size/strain/nanostructure analysis using peak profiles, texture analysis and pair distribution function analysis are introduced.},
   author = {James A Kaduk and Simon J L Billinge and Robert E Dinnebier and Nathan Henderson and Ian Madsen and Radovan Černý and Matteo Leoni and Luca Lutterotti and Seema Thakral and Daniel Chateigner},
   doi = {10.1038/s43586-021-00074-7},
   issn = {2662-8449},
   issue = {1},
   journal = {Nature Reviews Methods Primers},
   pages = {77},
   title = {Powder diffraction},
   volume = {1},
   url = {https://doi.org/10.1038/s43586-021-00074-7},
   year = {2021},
}
@article{Lmfit,
   author = {Matthew Newville and Till Stensitzki and Daniel B Allen and Michal Rawlik and Antonino Ingargiola and Andrew Nelson},
   journal = {Astrophysics Source Code Library},
   pages = {ascl–1606},
   title = {LMFIT: Non-linear least-square minimization and curve-fitting for Python},
   url = {https://lmfit.github.io/lmfit-py/},
   year = {2016},
}
@article{Jansen,
   abstract = {A new algorithm, direct intensity fitting, has been developed which performs a whole-pattern fitting for powder data. The algorithm is related to the fitting technique of Pawley [J. Appl. Cryst. 14, 357-361] but does not requires start values for the intensities of the individual reflections. Comparative tests show that direct intensity fitting extracts more accurate intensities from a powder diffractogram and reduces the minimum peak distance for accurate data to half of the half-widths. The structure of the superconductor Ba2YCu3O8-x can be solved in a default direct-methods run with direct-intensity-fitting intensities extracted from a normal laboratory powder diffractogram.},
   author = {J. Jansen and R. Peschar and H. Schenk},
   doi = {10.1107/S0021889891012104},
   issn = {00218898},
   issue = {pt 2},
   journal = {Journal of Applied Crystallography},
   title = {Determination of accurate intensities from powder diffraction data. I. Whole-pattern fitting with a least-squares procedure},
   volume = {25},
   year = {1992},
}
@article{Convex,
   author = {A. R. Browning and M. A. F. Afzal and J. Sanders and A. Goldberg and A. Chandrasekaran and H. S. Kwak},
   journal = {International Polyolefins Conference},
   title = {Polyolefin Molecular Simulation for Critical Physical Characteristics},
   year = {2020},
}
@inproceedings{Patrone,
   abstract = {In computational materials science, mechanical properties are typically extracted from simulations by means of analysis routines that seek to mimic their experimental counterparts. However, simulated data often exhibit uncertainties that can propagate into final predictions in unexpected ways. Thus, modelers require data analysis tools that (i) address the problems posed by simulated data, and (ii) facilitate uncertainty quantification. In this manuscript, we discuss three case studies in materials modeling where careful data analysis can be leveraged to address specific instances of these issues. As a unifying theme, we highlight the idea that attention to physical and mathematical constraints surrounding the generation of computational data can significantly enhance its analysis.},
   author = {Paul N. Patrone and Anthony J. Kearsley and Andrew M. Dienstfrey},
   doi = {10.2514/6.2018-0927},
   issue = {209969},
   journal = {AIAA Non-Deterministic Approaches Conference, 2018},
   title = {The role of data analysis in uncertainty quantification: Case studies for materials modeling},
   volume = {0},
   year = {2018},
}
@article{Deposition,
   author = {Paul Winget and H. Shaun Kwak and Christopher T. Brown and Alexandr Fonari and Kevin Tran and Alexander Goldberg and Andrea R. Browning and Mathew D. Halls},
   journal = {International Conference on the Science and Technology of Synthetic Metals},
   title = {Organic Thin Films for OLED Applications: Influence of Molecular Structure, Deposition Method, and Deposition Conditions},
   year = {2022},
}
@article{Scipy,
   abstract = {SciPy is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, SciPy has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of SciPy 1.0 and highlight some recent technical developments.},
   author = {Pauli Virtanen and Ralf Gommers and Travis E. Oliphant and Matt Haberland and Tyler Reddy and David Cournapeau and Evgeni Burovski and Pearu Peterson and Warren Weckesser and Jonathan Bright and Stéfan J. van der Walt and Matthew Brett and Joshua Wilson and K. Jarrod Millman and Nikolay Mayorov and Andrew R.J. Nelson and Eric Jones and Robert Kern and Eric Larson and C. J. Carey and İlhan Polat and Yu Feng and Eric W. Moore and Jake VanderPlas and Denis Laxalde and Josef Perktold and Robert Cimrman and Ian Henriksen and E. A. Quintero and Charles R. Harris and Anne M. Archibald and Antônio H. Ribeiro and Fabian Pedregosa and Paul van Mulbregt and Aditya Vijaykumar and Alessandro Pietro Bardelli and Alex Rothberg and Andreas Hilboll and Andreas Kloeckner and Anthony Scopatz and Antony Lee and Ariel Rokem and C. Nathan Woods and Chad Fulton and Charles Masson and Christian Haggström and Clark Fitzgerald and David A. Nicholson and David R. Hagen and Dmitrii V. Pasechnik and Emanuele Olivetti and Eric Martin and Eric Wieser and Fabrice Silva and Felix Lenders and Florian Wilhelm and G. Young and Gavin A. Price and Gert Ludwig Ingold and Gregory E. Allen and Gregory R. Lee and Hervé Audren and Irvin Probst and Jörg P. Dietrich and Jacob Silterra and James T. Webber and Janko Slavič and Joel Nothman and Johannes Buchner and Johannes Kulick and Johannes L. Schönberger and José Vinícius de Miranda Cardoso and Joscha Reimer and Joseph Harrington and Juan Luis Cano Rodríguez and Juan Nunez-Iglesias and Justin Kuczynski and Kevin Tritz and Martin Thoma and Matthew Newville and Matthias Kümmerer and Maximilian Bolingbroke and Michael Tartre and Mikhail Pak and Nathaniel J. Smith and Nikolai Nowaczyk and Nikolay Shebanov and Oleksandr Pavlyk and Per A. Brodtkorb and Perry Lee and Robert T. McGibbon and Roman Feldbauer and Sam Lewis and Sam Tygier and Scott Sievert and Sebastiano Vigna and Stefan Peterson and Surhud More and Tadeusz Pudlik and Takuya Oshima and Thomas J. Pingel and Thomas P. Robitaille and Thomas Spura and Thouis R. Jones and Tim Cera and Tim Leslie and Tiziano Zito and Tom Krauss and Utkarsh Upadhyay and Yaroslav O. Halchenko and Yoshiki Vázquez-Baeza},
   doi = {10.1038/s41592-019-0686-2},
   issn = {15487105},
   issue = {3},
   journal = {Nature Methods},
   title = {SciPy 1.0: fundamental algorithms for scientific computing in Python},
   volume = {17},
   year = {2020},
}
@book{Bicerano,
   author = {Jozef Bicerano},
   publisher = {cRc Press},
   title = {Prediction of polymer properties},
   year = {2002},
}
@inproceedings{Desmond,
   abstract = {Anton 2 is a second-generation special-purpose supercomputer for molecular dynamics simulations that achieves significant gains in performance, programmability, and capacity compared to its predecessor, Anton 1. The architecture of Anton 2 is tailored for fine-grained event-driven operation, which improves performance by increasing the overlap of computation with communication, and also allows a wider range of algorithms to run efficiently, enabling many new software-based optimizations. A 512-node Anton 2 machine, currently in operation, is up to ten times faster than Anton 1 with the same number of nodes, greatly expanding the reach of all-atom bio molecular simulations. Anton 2 is the first platform to achieve simulation rates of multiple microseconds of physical time per day for systems with millions of atoms. Demonstrating strong scaling, the machine simulates a standard 23,558-atom benchmark system at a rate of 85 μs/day - 180 times faster than any commodity hardware platform or general-purpose supercomputer.},
   author = {David E. Shaw and J. P. Grossman and Joseph A. Bank and Brannon Batson and J. Adam Butts and Jack C. Chao and Martin M. Deneroff and Ron O. Dror and Amos Even and Christopher H. Fenton and Anthony Forte and Joseph Gagliardo and Gennette Gill and Brian Greskamp and C. Richard Ho and Douglas J. Ierardi and Lev Iserovich and Jeffrey S. Kuskin and Richard H. Larson and Timothy Layman and Li Siang Lee and Adam K. Lerer and Chester Li and Daniel Killebrew and Kenneth M. Mackenzie and Shark Yeuk Hai Mok and Mark A. Moraes and Rolf Mueller and Lawrence J. Nociolo and Jon L. Peticolas and Terry Quan and Daniel Ramot and John K. Salmon and Daniele P. Scarpazza and U. Ben Schafer and Naseer Siddique and Christopher W. Snyder and Jochen Spengler and Ping Tak Peter Tang and Michael Theobald and Horia Toma and Brian Towles and Benjamin Vitale and Stanley C. Wang and Cliff Young},
   doi = {10.1109/SC.2014.9},
   issn = {21674337},
   issue = {January},
   journal = {International Conference for High Performance Computing, Networking, Storage and Analysis, SC},
   title = {Anton 2: Raising the Bar for Performance and Programmability in a Special-Purpose Molecular Dynamics Supercomputer},
   volume = {2015-January},
   year = {2014},
}
@article{MDS,
   abstract = {Recent advances in graphics processing unit (GPU) hardware and improved efficiencies of atomistic simulation programs allow for the screening of a large number of polymers to predict properties that require running and analyzing long molecular dynamics (MD) trajectories. This paper outlines a MD simulation workflow based on GPU MD simulation and the refined optimized potentials for liquid simulation (OPLS) OPLS3e force field to calculate glass transition temperatures (Tgs) of 315 polymers for which Bicerano reported experimental values [ Bicerano, J. Prediction of Polymer Properties; Marcel Dekker Inc.: New York, 1996 ]. Applying the workflow across this large set of polymers allowed for a comprehensive evaluation of the protocol performance and helped in understanding its merits and limitations. We observe a consistent trend between predicted Tg values and empirical observation across several subsets of polymers. Thus, the protocol established in this work is promising for exploring targeted chemical spaces and aids in the evaluation of polymers for various applications, including composites, coatings, electrical casings, etc. During the stepwise cooling simulation for the calculation of Tg, a subset of polymers clearly showed an ordered structure developing as the temperature decreased. Such polymers have a point of discontinuity on the specific volume vs temperature plot, which we associate with the melting temperature (Tm). We demonstrate the distinction between crystallized and amorphous polymers by examining polyethylene. Linear polyethylene shows a discontinuity in the specific volume vs temperature plot, but we do not observe the discontinuity for branched polyethylene simulations.},
   author = {Mohammad Atif Faiz Afzal and Andrea R. Browning and Alexander Goldberg and Mathew D. Halls and Jacob L. Gavartin and Tsuguo Morisato and Thomas F. Hughes and David J. Giesen and Joseph E. Goose},
   doi = {10.1021/acsapm.0c00524},
   issn = {26376105},
   issue = {2},
   journal = {ACS Applied Polymer Materials},
   title = {High-Throughput Molecular Dynamics Simulations and Validation of Thermophysical Properties of Polymers for Various Applications},
   volume = {3},
   year = {2021},
}
@article{CScreen,
   abstract = {Materials exhibiting higher mobilities than conventional organic semiconducting materials such as fullerenes and fused thiophenes are in high demand for applications in printed electronics. To discover new molecules in the heteroacene family that might show improved charge mobility, a massive theoretical screen of hole conducting properties of molecules was performed by using a cloud-computing environment. Over 7 »000 »000 structures of fused furans, thiophenes and selenophenes were generated and 250 »000 structures were randomly selected to perform density functional theory (DFT) calculations of hole reorganization energies. The lowest hole reorganization energy calculated was 0.0548 eV for a fused thioacene having 8 aromatics rings. Hole mobilities of compounds with the lowest 130 reorganization energy were further processed by applying combined DFT and molecular dynamics (MD) methods. The highest mobility calculated was 1.02 and 9.65 cm2/(V s) based on percolation and disorder theory, respectively, for compounds containing selenium atoms with 8 aromatic rings. These values are about 20 times higher than those for dinaphthothienothiophene (DNTT).},
   author = {Nobuyuki N. Matsuzawa and Hideyuki Arai and Masaru Sasago and Eiji Fujii and Alexander Goldberg and Thomas J. Mustard and H. Shaun Kwak and David J. Giesen and Fabio Ranalli and Mathew D. Halls},
   doi = {10.1021/acs.jpca.9b10998},
   issn = {15205215},
   issue = {10},
   journal = {Journal of Physical Chemistry A},
   title = {Massive theoretical screen of hole conducting organic materials in the heteroacene family by using a cloud-computing environment},
   volume = {124},
   year = {2020},
}
@article{Jaguar,
   abstract = {Jaguar is an ab initio quantum chemical program that specializes in fast electronic structure predictions for molecular systems of medium and large size. Jaguar focuses on computational methods with reasonable computational scaling with the size of the system, such as density functional theory (DFT) and local second-order Møller-Plesset perturbation theory. The favorable scaling of the methods and the high efficiency of the program make it possible to conduct routine computations involving several thousand molecular orbitals. This performance is achieved through a utilization of the pseudospectral approximation and several levels of parallelization. The speed advantages are beneficial for applying Jaguar in biomolecular computational modeling. Additionally, owing to its superior wave function guess for transition-metal- containing systems, Jaguar finds applications in inorganic and bioinorganic chemistry. The emphasis on larger systems and transition metal elements paves the way toward developing Jaguar for its use in materials science modeling. The article describes the historical and new features of Jaguar, such as improved parallelization of many modules, innovations in ab initio pKa prediction, and new semiempirical corrections for nondynamic correlation errors in DFT. Jaguar applications in drug discovery, materials science, force field parameterization, and other areas of computational research are reviewed. Timing benchmarks and other results obtained from the most recent Jaguar code are provided. The article concludes with a discussion of challenges and directions for future development of the program. © 2013 Wiley Periodicals, Inc.},
   author = {Art D. Bochevarov and Edward Harder and Thomas F. Hughes and Jeremy R. Greenwood and Dale A. Braden and Dean M. Philipp and David Rinaldo and Mathew D. Halls and Jing Zhang and Richard A. Friesner},
   doi = {10.1002/qua.24481},
   issn = {00207608},
   issue = {18},
   journal = {International Journal of Quantum Chemistry},
   title = {Jaguar: A high-performance quantum chemistry software program with strengths in life and materials sciences},
   volume = {113},
   year = {2013},
}
@inproceedings{TM,
   author = {Thomas Mustard and Jacob Gavartin and Alexandr Fonari and Caroline Krauter and Alexander Goldberg and H Kwak and Tsuguo Morisato and Sudharsan Pandiyan and Mathew Halls},
   journal = {ABSTRACTS OF PAPERS OF THE AMERICAN CHEMICAL SOCIETY},
   title = {Surface reactivity and stability of core-shell solid catalysts from ab initio combinatorial calculations},
   volume = {258},
   year = {2019},
}
@article{Grph,
   author = {O Hassel and H Mark},
   journal = {Physik. Z},
   pages = {317-337},
   title = {The Crystal Structure of Graphite},
   volume = {25},
   year = {1924},
}
@computer_program{qeschema,
   author = {Davide Brunato and Pietro Delugas and Giovanni Borghi and Alexandr Fonari},
   title = {qeschema},
   url = {https://github.com/QEF/qeschema},
}
@article{QE,
   abstract = {Quantum ESPRESSO is an integrated suite of open-source computer codes for quantum simulations of materials using state-of-the-art electronic-structure techniques, based on density-functional theory, density-functional perturbation theory, and many-body perturbation theory, within the plane-wave pseudopotential and projector-augmented-wave approaches. Quantum ESPRESSO owes its popularity to the wide variety of properties and processes it allows to simulate, to its performance on an increasingly broad array of hardware architectures, and to a community of researchers that rely on its capabilities as a core open-source development platform to implement their ideas. In this paper we describe recent extensions and improvements, covering new methodologies and property calculators, improved parallelization, code modularization, and extended interoperability both within the distribution and with external software.},
   author = {P. Giannozzi and O. Andreussi and T. Brumme and O. Bunau and M. Buongiorno Nardelli and M. Calandra and R. Car and C. Cavazzoni and D. Ceresoli and M. Cococcioni and N. Colonna and I. Carnimeo and A. Dal Corso and S. De Gironcoli and P. Delugas and R. A. Distasio and A. Ferretti and A. Floris and G. Fratesi and G. Fugallo and R. Gebauer and U. Gerstmann and F. Giustino and T. Gorni and J. Jia and M. Kawamura and H. Y. Ko and A. Kokalj and E. Kücükbenli and M. Lazzeri and M. Marsili and N. Marzari and F. Mauri and N. L. Nguyen and H. V. Nguyen and A. Otero-De-La-Roza and L. Paulatto and S. Poncé and D. Rocca and R. Sabatini and B. Santra and M. Schlipf and A. P. Seitsonen and A. Smogunov and I. Timrov and T. Thonhauser and P. Umari and N. Vast and X. Wu and S. Baroni},
   doi = {10.1088/1361-648X/aa8f79},
   issn = {1361648X},
   issue = {46},
   journal = {Journal of Physics Condensed Matter},
   title = {Advanced capabilities for materials modelling with Quantum ESPRESSO},
   volume = {29},
   url = {https://www.quantum-espresso.org/},
   year = {2017},
}
@article{Enumlib,
   abstract = {We present an algorithm for generating all derivative superstructures-for arbitrary parent structures and for any number of atom types. This algorithm enumerates superlattices and atomic configurations in a geometry-independent way. The key concept is to use the quotient group associated with each superlattice to determine all unique atomic configurations. The run time of the algorithm scales linearly with the number of unique structures found. © 2008 The American Physical Society.},
   author = {Gus L.W. Hart and Rodney W. Forcade},
   doi = {10.1103/PhysRevB.77.224115},
   issn = {10980121},
   issue = {22},
   journal = {Physical Review B - Condensed Matter and Materials Physics},
   title = {Algorithm for generating derivative structures},
   volume = {77},
   url = {https://github.com/msg-byu/enumlib/},
   year = {2008},
}
@article{CSD,
   abstract = {The Cambridge Structural Database (CSD) contains a complete record of all published organic and metal-organic small-molecule crystal structures. The database has been in operation for over 50 years and continues to be the primary means of sharing structural chemistry data and knowledge across disciplines. As well as structures that are made public to support scientific articles, it includes many structures published directly as CSD Communications. All structures are processed both computationally and by expert structural chemistry editors prior to entering the database. A key component of this processing is the reliable association of the chemical identity of the structure studied with the experimental data. This important step helps ensure that data is widely discoverable and readily reusable. Content is further enriched through selective inclusion of additional experimental data. Entries are available to anyone through free CSD community web services. Linking services developed and maintained by the CCDC, combined with the use of standard identifiers, facilitate discovery from other resources. Data can also be accessed through CCDC and third party software applications and through an application programming interface.This paper is the definitive article describing the creation, maintenance, information content and availability of the Cambridge Structural Database (CSD), the world's repository of small molecule crystal structures.},
   author = {Colin R. Groom and Ian J. Bruno and Matthew P. Lightfoot and Suzanna C. Ward},
   doi = {10.1107/S2052520616003954},
   issn = {20525206},
   issue = {2},
   journal = {Acta Crystallographica Section B: Structural Science, Crystal Engineering and Materials},
   title = {The Cambridge structural database},
   volume = {72},
   year = {2016},
}
@generic{ASE,
   abstract = {The atomic simulation environment (ASE) is a software package written in the Python programming language with the aim of setting up, steering, and analyzing atomistic simulations. In ASE, tasks are fully scripted in Python. The powerful syntax of Python combined with the NumPy array library make it possible to perform very complex simulation tasks. For example, a sequence of calculations may be performed with the use of a simple 'for-loop' construction. Calculations of energy, forces, stresses and other quantities are performed through interfaces to many external electronic structure codes or force fields using a uniform interface. On top of this calculator interface, ASE provides modules for performing many standard simulation tasks such as structure optimization, molecular dynamics, handling of constraints and performing nudged elastic band calculations.},
   author = {Ask Hjorth Larsen and Jens JØrgen Mortensen and Jakob Blomqvist and Ivano E. Castelli and Rune Christensen and Marcin Dułak and Jesper Friis and Michael N. Groves and BjØrk Hammer and Cory Hargus and Eric D. Hermes and Paul C. Jennings and Peter Bjerre Jensen and James Kermode and John R. Kitchin and Esben Leonhard Kolsbjerg and Joseph Kubal and Kristen Kaasbjerg and Steen Lysgaard and Jón Bergmann Maronsson and Tristan Maxson and Thomas Olsen and Lars Pastewka and Andrew Peterson and Carsten Rostgaard and Jakob SchiØtz and Ole Schütt and Mikkel Strange and Kristian S. Thygesen and Tejs Vegge and Lasse Vilhelmsen and Michael Walter and Zhenhua Zeng and Karsten W. Jacobsen},
   doi = {10.1088/1361-648X/aa680e},
   issn = {1361648X},
   issue = {27},
   journal = {Journal of Physics Condensed Matter},
   title = {The atomic simulation environment - A Python library for working with atoms},
   volume = {29},
   url = {https://wiki.fysik.dtu.dk/ase/},
   year = {2017},
}
@book_section{Formats,
   author = {John D. Westbrook and Paula M.D. Fitzgerald},
   doi = {10.1002/0471721204.ch8},
   journal = {Structural Bioinformatics},
   title = {The PDB Format, mmCIF Formats, and Other Data Formats},
   year = {2005},
}
@article{RDKit,
   author = {Greg Landrum and Paolo Tosco and Brian Kelley and Ric and sriniker and gedeck and Riccardo Vianello and NadineSchneider and Eisuke Kawashima and Andrew Dalke and Dan N and David Cosgrove and Gareth Jones and Brian Cole and Matt Swain and Samo Turk and AlexanderSavelyev and Alain Vaucher and Maciej Wójcikowski and Ichiru Take and Daniel Probst and Kazuya Ujihara and Vincent F. Scalfani and guillaume godin and Axel Pahl and Francois Berenger and JLVarjo and strets123 and JP and DoliathGavid},
   doi = {10.5281/ZENODO.6605135},
   month = {6},
   title = {rdkit},
   url = {https://rdkit.org/},
   year = {2022},
}
@article{Obabel,
   abstract = {Background: A frequent problem in computational modeling is the interconversion of chemical structures between different formats. While standard interchange formats exist (for example, Chemical Markup Language) and de facto standards have arisen (for example, SMILES format), the need to interconvert formats is a continuing problem due to the multitude of different application areas for chemistry data, differences in the data stored by different formats (0D versus 3D, for example), and competition between software along with a lack of vendorneutral formats. Results: We discuss, for the first time, Open Babel, an open-source chemical toolbox that speaks the many languages of chemical data. Open Babel version 2.3 interconverts over 110 formats. The need to represent such a wide variety of chemical and molecular data requires a library that implements a wide range of cheminformatics algorithms, from partial charge assignment and aromaticity detection, to bond order perception and canonicalization. We detail the implementation of Open Babel, describe key advances in the 2.3 release, and outline a variety of uses both in terms of software products and scientific research, including applications far beyond simple format interconversion. Conclusions: Open Babel presents a solution to the proliferation of multiple chemical file formats. In addition, it provides a variety of useful utilities from conformer searching and 2D depiction, to filtering, batch conversion, and substructure and similarity searching. For developers, it can be used as a programming library to handle chemical data in areas such as organic chemistry, drug design, materials science, and computational chemistry. It is freely available under an open-source license from http://openbabel.org. © 2011 O'Boyle et al; licensee Chemistry Central Ltd.},
   author = {Noel M. O'Boyle and Michael Banck and Craig A. James and Chris Morley and Tim Vandermeersch and Geoffrey R. Hutchison},
   doi = {10.1186/1758-2946-3-33},
   issn = {17582946},
   issue = {10},
   journal = {Journal of Cheminformatics},
   title = {Open Babel: An Open chemical toolbox},
   volume = {3},
   url = {https://openbabel.org/},
   year = {2011},
}
@article{AiiDA,
   abstract = {The ever-growing availability of computing power and the sustained development of advanced computational methods have contributed much to recent scientific progress. These developments present new challenges driven by the sheer amount of calculations and data to manage. Next-generation exascale supercomputers will harden these challenges, such that automated and scalable solutions become crucial. In recent years, we have been developing AiiDA (aiida.net), a robust open-source high-throughput infrastructure addressing the challenges arising from the needs of automated workflow management and data provenance recording. Here, we introduce developments and capabilities required to reach sustained performance, with AiiDA supporting throughputs of tens of thousands processes/hour, while automatically preserving and storing the full data provenance in a relational database making it queryable and traversable, thus enabling high-performance data analytics. AiiDA’s workflow language provides advanced automation, error handling features and a flexible plugin model to allow interfacing with external simulation software. The associated plugin registry enables seamless sharing of extensions, empowering a vibrant user community dedicated to making simulations more robust, user-friendly and reproducible.},
   author = {Sebastiaan P. Huber and Spyros Zoupanos and Martin Uhrin and Leopold Talirz and Leonid Kahle and Rico Hauselmann and Dominik Gresch and Tiziano Müller and Aliaksandr V. Yakutovich and Casper W. Andersen and Francisco F. Ramirez and Carl S. Adorf and Fernando Gargiulo and Snehal Kumbhar and Elsa Passaro and Conrad Johnston and Andrius Merkys and Andrea Cepellotti and Nicolas Mounet and Nicola Marzari and Boris Kozinsky and Giovanni Pizzi},
   doi = {10.1038/s41597-020-00638-4},
   issn = {20524463},
   issue = {1},
   journal = {Scientific Data},
   title = {AiiDA 1.0, a scalable computational infrastructure for automated reproducible workflows and data provenance},
   volume = {7},
   url = {https://www.aiida.net/},
   year = {2020},
}
@article{pymatgen,
   abstract = {We present the Python Materials Genomics (pymatgen) library, a robust, open-source Python library for materials analysis. A key enabler in high-throughput computational materials science efforts is a robust set of software tools to perform initial setup for the calculations (e.g., generation of structures and necessary input files) and post-calculation analysis to derive useful material properties from raw calculated data. The pymatgen library aims to meet these needs by (1) defining core Python objects for materials data representation, (2) providing a well-tested set of structure and thermodynamic analyses relevant to many applications, and (3) establishing an open platform for researchers to collaboratively develop sophisticated analyses of materials data obtained both from first principles calculations and experiments. The pymatgen library also provides convenient tools to obtain useful materials data via the Materials Project's REpresentational State Transfer (REST) Application Programming Interface (API). As an example, using pymatgen's interface to the Materials Project's RESTful API and phasediagram package, we demonstrate how the phase and electrochemical stability of a recently synthesized material, Li 4SnS4, can be analyzed using a minimum of computing resources. We find that Li4SnS4 is a stable phase in the Li-Sn-S phase diagram (consistent with the fact that it can be synthesized), but the narrow range of lithium chemical potentials for which it is predicted to be stable would suggest that it is not intrinsically stable against typical electrodes used in lithium-ion batteries. © 2012 Elsevier B.V. All rights reserved.},
   author = {Shyue Ping Ong and William Davidson Richards and Anubhav Jain and Geoffroy Hautier and Michael Kocher and Shreyas Cholia and Dan Gunter and Vincent L. Chevrier and Kristin A. Persson and Gerbrand Ceder},
   doi = {10.1016/j.commatsci.2012.10.028},
   issn = {09270256},
   journal = {Computational Materials Science},
   title = {Python Materials Genomics (pymatgen): A robust, open-source python library for materials analysis},
   volume = {68},
   url = {https://pymatgen.org/},
   year = {2013},
}
@generic{Numpy,
   abstract = {Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves1 and in the first imaging of a black hole2. Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
   author = {Charles R. Harris and K. Jarrod Millman and Stéfan J. van der Walt and Ralf Gommers and Pauli Virtanen and David Cournapeau and Eric Wieser and Julian Taylor and Sebastian Berg and Nathaniel J. Smith and Robert Kern and Matti Picus and Stephan Hoyer and Marten H. van Kerkwijk and Matthew Brett and Allan Haldane and Jaime Fernández del Río and Mark Wiebe and Pearu Peterson and Pierre Gérard-Marchant and Kevin Sheppard and Tyler Reddy and Warren Weckesser and Hameer Abbasi and Christoph Gohlke and Travis E. Oliphant},
   doi = {10.1038/s41586-020-2649-2},
   issn = {14764687},
   issue = {7825},
   journal = {Nature},
   title = {Array programming with NumPy},
   volume = {585},
   url = {https://numpy.org/},
   year = {2020},
}
